{"prompt": "Create an email automation workflow: Send daily morning briefings to team members. The workflow should send daily morning briefings to team members automatically.", "workflow": {"workflowId": "737da4e4-3d1e-41dd-b57a-cf30b9627334", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Send daily morning briefings to team members", "description": "Automated workflow for send daily morning briefings to team members", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Send daily morning briefings to team members", "body": "This is an automated email for send daily morning briefings to team members"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Automated birthday wishes to customers. The workflow should automated birthday wishes to customers automatically.", "workflow": {"workflowId": "30d436e7-7536-4a2c-846c-b4351104d075", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Automated birthday wishes to customers", "description": "Automated workflow for automated birthday wishes to customers", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Automated birthday wishes to customers", "body": "This is an automated email for automated birthday wishes to customers"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Weekly project status updates to stakeholders. The workflow should weekly project status updates to stakeholders automatically.", "workflow": {"workflowId": "76d34c60-a6ed-4d0f-9e7c-21ab0bb904f1", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Weekly project status updates to stakeholders", "description": "Automated workflow for weekly project status updates to stakeholders", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Weekly project status updates to stakeholders", "body": "This is an automated email for weekly project status updates to stakeholders"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Follow-up emails after customer purchases. The workflow should follow-up emails after customer purchases automatically.", "workflow": {"workflowId": "940ce81d-2c46-4e91-8a85-89673dfd441b", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Follow-up emails after customer purchases", "description": "Automated workflow for follow-up emails after customer purchases", "triggers": [{"node": "cron", "parameters": {"expression": "0 8 * * 1-5", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Follow-up emails after customer purchases", "body": "This is an automated email for follow-up emails after customer purchases"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Reminder emails for upcoming meetings. The workflow should reminder emails for upcoming meetings automatically.", "workflow": {"workflowId": "2376f893-2d53-4fc1-8720-5625b6527744", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Reminder emails for upcoming meetings", "description": "Automated workflow for reminder emails for upcoming meetings", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Reminder emails for upcoming meetings", "body": "This is an automated email for reminder emails for upcoming meetings"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Newsletter automation for subscribers. The workflow should newsletter automation for subscribers automatically.", "workflow": {"workflowId": "2d2c4214-fed3-447d-90ee-af4abc927d17", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Newsletter automation for subscribers", "description": "Automated workflow for newsletter automation for subscribers", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Newsletter automation for subscribers", "body": "This is an automated email for newsletter automation for subscribers"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Welcome email series for new users. The workflow should welcome email series for new users automatically.", "workflow": {"workflowId": "0cda041b-5163-489e-a669-70ed5e8046bd", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Welcome email series for new users", "description": "Automated workflow for welcome email series for new users", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Welcome email series for new users", "body": "This is an automated email for welcome email series for new users"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Abandoned cart recovery emails. The workflow should abandoned cart recovery emails automatically.", "workflow": {"workflowId": "0259bd77-202a-4771-ba58-a56baa2bcd0c", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Abandoned cart recovery emails", "description": "Automated workflow for abandoned cart recovery emails", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Abandoned cart recovery emails", "body": "This is an automated email for abandoned cart recovery emails"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Invoice reminders for overdue payments. The workflow should invoice reminders for overdue payments automatically.", "workflow": {"workflowId": "1a72c46a-7dcf-490f-862a-81e442f0d0d0", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Invoice reminders for overdue payments", "description": "Automated workflow for invoice reminders for overdue payments", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Invoice reminders for overdue payments", "body": "This is an automated email for invoice reminders for overdue payments"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Create an email automation workflow: Event invitation emails with RSVP tracking. The workflow should event invitation emails with rsvp tracking automatically.", "workflow": {"workflowId": "e7b3b125-cc06-4d65-8d21-4ef7e3803289", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Event invitation emails with RSVP tracking", "description": "Automated workflow for event invitation emails with rsvp tracking", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Event invitation emails with RSVP tracking", "body": "This is an automated email for event invitation emails with rsvp tracking"}}], "logic": [], "variables": []}}, "category": "email_automation"}
{"prompt": "Set up an HTTP integration to sync customer data between crm and marketing platform. The system should handle API calls automatically.", "workflow": {"workflowId": "d13d8c12-19fd-4ff0-95d2-1aa84e64eb78", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync customer data between CRM and marketing platform", "description": "HTTP workflow for sync customer data between crm and marketing platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_customer_data_between_crm_and_marketing_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to fetch weather data and update dashboard. The system should handle API calls automatically.", "workflow": {"workflowId": "ad76271f-38b1-4902-abfd-5ee021aca93b", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Fetch weather data and update dashboard", "description": "HTTP workflow for fetch weather data and update dashboard", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/fetch_weather_data_and_update_dashboard", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to submit form data to external analytics service. The system should handle API calls automatically.", "workflow": {"workflowId": "1e3d6411-0e4d-4174-94db-40c82463db5c", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Submit form data to external analytics service", "description": "HTTP workflow for submit form data to external analytics service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/submit_form_data_to_external_analytics_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to poll external api for order status updates. The system should handle API calls automatically.", "workflow": {"workflowId": "845ed6e2-514d-4f26-a6f5-ddc78c581bae", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Poll external API for order status updates", "description": "HTTP workflow for poll external api for order status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/poll_external_api_for_order_status_updates", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to send webhook notifications to slack. The system should handle API calls automatically.", "workflow": {"workflowId": "cabcda13-8f2d-46e2-aa8d-c8352faca3ea", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send webhook notifications to Slack", "description": "HTTP workflow for send webhook notifications to slack", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_webhook_notifications_to_slack", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to update inventory levels in e-commerce platform. The system should handle API calls automatically.", "workflow": {"workflowId": "200722ac-a20e-4e57-9a64-01a52bdafb3f", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Update inventory levels in e-commerce platform", "description": "HTTP workflow for update inventory levels in e-commerce platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/update_inventory_levels_in_e-commerce_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to backup data to cloud storage service. The system should handle API calls automatically.", "workflow": {"workflowId": "8b67d704-8e31-472b-855c-64a1bfc9ecc2", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Backup data to cloud storage service", "description": "HTTP workflow for backup data to cloud storage service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/backup_data_to_cloud_storage_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to trigger deployment pipeline via api. The system should handle API calls automatically.", "workflow": {"workflowId": "81611870-e664-40de-8e15-ab34e303c1a7", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Trigger deployment pipeline via API", "description": "HTTP workflow for trigger deployment pipeline via api", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/trigger_deployment_pipeline_via_api", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to send customer feedback to support system. The system should handle API calls automatically.", "workflow": {"workflowId": "76cba9b2-7c27-449d-bcf3-1fcb5ede9312", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send customer feedback to support system", "description": "HTTP workflow for send customer feedback to support system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_customer_feedback_to_support_system", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Set up an HTTP integration to sync calendar events with project management tool. The system should handle API calls automatically.", "workflow": {"workflowId": "e6c3185e-2423-444f-9345-7d4ef30bc16d", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync calendar events with project management tool", "description": "HTTP workflow for sync calendar events with project management tool", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_calendar_events_with_project_management_tool", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration"}
{"prompt": "Create an SMS notification system to send appointment reminders to patients. Messages should be sent automatically.", "workflow": {"workflowId": "62299658-8335-4e49-acde-0be9f2c4078e", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Send appointment reminders to patients", "description": "SMS workflow for send appointment reminders to patients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Send appointment reminders to patients"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to alert customers about order shipments. Messages should be sent automatically.", "workflow": {"workflowId": "a911a81e-ddbe-4628-b0ef-37541ab0ff74", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Alert customers about order shipments", "description": "SMS workflow for alert customers about order shipments", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Alert customers about order shipments"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to emergency notifications to on-call staff. Messages should be sent automatically.", "workflow": {"workflowId": "906dff8a-a3fb-4160-9d27-099357437ab4", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Emergency notifications to on-call staff", "description": "SMS workflow for emergency notifications to on-call staff", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Emergency notifications to on-call staff"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to daily sales summary to management. Messages should be sent automatically.", "workflow": {"workflowId": "ecdfd296-974e-4dc0-9020-02cbe7cd2e70", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Daily sales summary to management", "description": "SMS workflow for daily sales summary to management", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Daily sales summary to management"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to payment due reminders to clients. Messages should be sent automatically.", "workflow": {"workflowId": "8f6c266b-2a75-493d-8183-f8cae8b204ce", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Payment due reminders to clients", "description": "SMS workflow for payment due reminders to clients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Payment due reminders to clients"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to event start notifications to attendees. Messages should be sent automatically.", "workflow": {"workflowId": "ea547447-6b4e-4363-8983-845f973f61c6", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Event start notifications to attendees", "description": "SMS workflow for event start notifications to attendees", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Event start notifications to attendees"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to security alerts for suspicious activity. Messages should be sent automatically.", "workflow": {"workflowId": "9a773b1b-10a3-42f3-bb0b-16c629e2f54b", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Security alerts for suspicious activity", "description": "SMS workflow for security alerts for suspicious activity", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Security alerts for suspicious activity"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to delivery confirmation messages. Messages should be sent automatically.", "workflow": {"workflowId": "28d7d11e-ac8d-48b1-8923-714abc02c2c8", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Delivery confirmation messages", "description": "SMS workflow for delivery confirmation messages", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Delivery confirmation messages"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to promotional offers to loyal customers. Messages should be sent automatically.", "workflow": {"workflowId": "f0a4dc51-5595-477b-8c9c-445d0e54facf", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Promotional offers to loyal customers", "description": "SMS workflow for promotional offers to loyal customers", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Promotional offers to loyal customers"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Create an SMS notification system to system maintenance notifications. Messages should be sent automatically.", "workflow": {"workflowId": "1f8fbb08-3892-4407-af64-19979bae8cea", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: System maintenance notifications", "description": "SMS workflow for system maintenance notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: System maintenance notifications"}}], "logic": [], "variables": []}}, "category": "sms_notification"}
{"prompt": "Set up a database operation to archive old customer records monthly. The system should handle data processing automatically.", "workflow": {"workflowId": "ae0f0a2b-3297-40f8-a87d-c42f7d011b5a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Archive old customer records monthly", "description": "Database workflow for archive old customer records monthly", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_archive_old_customer_records_monthly", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to generate daily sales reports from transaction data. The system should handle data processing automatically.", "workflow": {"workflowId": "dcf0c17d-c007-4f90-a562-8803f7be6d64", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate daily sales reports from transaction data", "description": "Database workflow for generate daily sales reports from transaction data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_daily_sales_reports_from_transaction_data", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to update user profiles with latest activity. The system should handle data processing automatically.", "workflow": {"workflowId": "8c6ee9d2-76af-4466-b784-c850861d3c0a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update user profiles with latest activity", "description": "Database workflow for update user profiles with latest activity", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_user_profiles_with_latest_activity", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to clean up expired session tokens. The system should handle data processing automatically.", "workflow": {"workflowId": "3bb041d8-eba5-45c4-9ae8-dc425f2b6054", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Clean up expired session tokens", "description": "Database workflow for clean up expired session tokens", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_clean_up_expired_session_tokens", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to backup critical business data. The system should handle data processing automatically.", "workflow": {"workflowId": "29948a5e-16f7-4579-9a60-1b71b18c466a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Backup critical business data", "description": "Database workflow for backup critical business data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_backup_critical_business_data", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to sync user preferences across systems. The system should handle data processing automatically.", "workflow": {"workflowId": "d0b753e9-a6e4-4796-86b6-eabc49ff1a1d", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Sync user preferences across systems", "description": "Database workflow for sync user preferences across systems", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_sync_user_preferences_across_systems", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to calculate monthly subscription renewals. The system should handle data processing automatically.", "workflow": {"workflowId": "9b9f70f4-f717-4a8e-9f71-0c42b2585e67", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Calculate monthly subscription renewals", "description": "Database workflow for calculate monthly subscription renewals", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_calculate_monthly_subscription_renewals", "database": "inventory_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to update inventory counts from warehouse data. The system should handle data processing automatically.", "workflow": {"workflowId": "3d3b6c7a-6ac2-44c4-8b67-4b124676ae37", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update inventory counts from warehouse data", "description": "Database workflow for update inventory counts from warehouse data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_inventory_counts_from_warehouse_data", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to generate customer analytics dashboards. The system should handle data processing automatically.", "workflow": {"workflowId": "5487119e-655c-453f-b86b-cde51560f7be", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate customer analytics dashboards", "description": "Database workflow for generate customer analytics dashboards", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_customer_analytics_dashboards", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Set up a database operation to audit user access logs for compliance. The system should handle data processing automatically.", "workflow": {"workflowId": "a7b87371-e580-4b44-abf5-f0ccb4c81c14", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Audit user access logs for compliance", "description": "Database workflow for audit user access logs for compliance", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_audit_user_access_logs_for_compliance", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation"}
{"prompt": "Create an AI system to analyze customer feedback sentiment. The AI should process content automatically.", "workflow": {"workflowId": "d369b6c9-176e-457c-a9ca-f18edf49562f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze customer feedback sentiment", "description": "AI workflow for analyze customer feedback sentiment", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_customer_feedback_sentiment", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-3.5-turbo", "prompt": "Please analyze customer feedback sentiment based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to generate product descriptions from images. The AI should process content automatically.", "workflow": {"workflowId": "88ea5b61-85d5-443f-850f-fb6d0383f6ba", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate product descriptions from images", "description": "AI workflow for generate product descriptions from images", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_product_descriptions_from_images", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please generate product descriptions from images based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to classify support tickets by urgency. The AI should process content automatically.", "workflow": {"workflowId": "f563927d-9a6e-4c7b-b7c3-90f019a56f50", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Classify support tickets by urgency", "description": "AI workflow for classify support tickets by urgency", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/classify_support_tickets_by_urgency", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please classify support tickets by urgency based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to summarize meeting transcripts. The AI should process content automatically.", "workflow": {"workflowId": "977b43a7-b807-4d9b-bf3d-9369549572d9", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Summarize meeting transcripts", "description": "AI workflow for summarize meeting transcripts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/summarize_meeting_transcripts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please summarize meeting transcripts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to extract key information from contracts. The AI should process content automatically.", "workflow": {"workflowId": "d09e787c-ff32-4913-bc2c-2de39aa4cc8f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Extract key information from contracts", "description": "AI workflow for extract key information from contracts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/extract_key_information_from_contracts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please extract key information from contracts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to generate personalized email content. The AI should process content automatically.", "workflow": {"workflowId": "16b567ee-ae90-48dd-ba07-029a4feb2c69", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate personalized email content", "description": "AI workflow for generate personalized email content", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_personalized_email_content", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate personalized email content based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to analyze social media mentions. The AI should process content automatically.", "workflow": {"workflowId": "7829163a-e776-4f11-8310-e1ffdbea7feb", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze social media mentions", "description": "AI workflow for analyze social media mentions", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_social_media_mentions", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please analyze social media mentions based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to create content recommendations. The AI should process content automatically.", "workflow": {"workflowId": "f93e97fd-b572-423c-a6c3-2edaa22dd5aa", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Create content recommendations", "description": "AI workflow for create content recommendations", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/create_content_recommendations", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please create content recommendations based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to process resume screening. The AI should process content automatically.", "workflow": {"workflowId": "d79ff547-a553-4ccb-a1c9-b37395417a34", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Process resume screening", "description": "AI workflow for process resume screening", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/process_resume_screening", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please process resume screening based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Create an AI system to generate automated responses to faqs. The AI should process content automatically.", "workflow": {"workflowId": "9c5f8adf-aecd-4146-8cdf-137e4ce67e61", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate automated responses to FAQs", "description": "AI workflow for generate automated responses to faqs", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_automated_responses_to_faqs", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate automated responses to faqs based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing"}
{"prompt": "Set up a scheduled task for daily backup of critical systems. The task should run automatically on schedule.", "workflow": {"workflowId": "38a93b44-de5e-4123-8292-41194bb93614", "name": "Scheduled Task: Daily backup of critical systems", "description": "Scheduled workflow for daily backup of critical systems", "triggers": [{"node": "cron", "parameters": {"expression": "0 2 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for daily backup of critical systems\nprint('Executing Daily backup of critical systems')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for weekly performance optimization. The task should run automatically on schedule.", "workflow": {"workflowId": "52454e9f-54b9-4d57-afda-6b7783a86a4a", "name": "Scheduled Task: Weekly performance optimization", "description": "Scheduled workflow for weekly performance optimization", "triggers": [{"node": "cron", "parameters": {"expression": "0 1 1 * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for weekly performance optimization\nprint('Executing Weekly performance optimization')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for monthly user engagement reports. The task should run automatically on schedule.", "workflow": {"workflowId": "4726ba4c-7bb2-438c-af37-69df99679ddd", "name": "Scheduled Task: Monthly user engagement reports", "description": "Scheduled workflow for monthly user engagement reports", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for monthly user engagement reports\nprint('Executing Monthly user engagement reports')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for hourly data synchronization. The task should run automatically on schedule.", "workflow": {"workflowId": "23034bb2-ad14-429d-9a8d-4cc16a1a10e7", "name": "Scheduled Task: Hourly data synchronization", "description": "Scheduled workflow for hourly data synchronization", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for hourly data synchronization\nprint('Executing Hourly data synchronization')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for daily log file cleanup. The task should run automatically on schedule.", "workflow": {"workflowId": "54053b66-d9f7-4ded-9eec-8e943f2f8bb0", "name": "Scheduled Task: Daily log file cleanup", "description": "Scheduled workflow for daily log file cleanup", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for daily log file cleanup\nprint('Executing Daily log file cleanup')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for weekly security scans. The task should run automatically on schedule.", "workflow": {"workflowId": "8ff32453-0082-48d4-872b-563905943162", "name": "Scheduled Task: Weekly security scans", "description": "Scheduled workflow for weekly security scans", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for weekly security scans\nprint('Executing Weekly security scans')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for monthly billing cycle processing. The task should run automatically on schedule.", "workflow": {"workflowId": "cfe34792-25b3-4732-ba36-465162a18184", "name": "Scheduled Task: Monthly billing cycle processing", "description": "Scheduled workflow for monthly billing cycle processing", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for monthly billing cycle processing\nprint('Executing Monthly billing cycle processing')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for daily cache clearing. The task should run automatically on schedule.", "workflow": {"workflowId": "4d07f8e3-ee96-4f35-a451-7476728cdaa6", "name": "Scheduled Task: Daily cache clearing", "description": "Scheduled workflow for daily cache clearing", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for daily cache clearing\nprint('Executing Daily cache clearing')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for weekly database maintenance. The task should run automatically on schedule.", "workflow": {"workflowId": "5ffeafcf-17b3-456c-989c-f2471777e1e1", "name": "Scheduled Task: Weekly database maintenance", "description": "Scheduled workflow for weekly database maintenance", "triggers": [{"node": "cron", "parameters": {"expression": "0 */1 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for weekly database maintenance\nprint('Executing Weekly database maintenance')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Set up a scheduled task for monthly compliance audits. The task should run automatically on schedule.", "workflow": {"workflowId": "31f7f65d-79cd-4ed1-80f2-066cda0bfc0a", "name": "Scheduled Task: Monthly compliance audits", "description": "Scheduled workflow for monthly compliance audits", "triggers": [{"node": "cron", "parameters": {"expression": "0 1 1 * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "# Automated task for monthly compliance audits\nprint('Executing Monthly compliance audits')"}}], "logic": [], "variables": []}}, "category": "scheduled_task"}
{"prompt": "Create a webhook handler to process github push notifications. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "c44f20dd-cff2-4a4a-8b40-9d479c908723", "name": "Webhook Handler: Process GitHub push notifications", "description": "Webhook workflow for process github push notifications", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/process_github_push_notifications", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to handle stripe payment confirmations. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "1f57de66-e8cb-42c4-bf8d-17cb38a1bb65", "name": "Webhook Handler: Handle Stripe payment confirmations", "description": "Webhook workflow for handle stripe payment confirmations", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/handle_stripe_payment_confirmations", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to receive slack slash commands. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "6a453ddd-9146-4fc9-88d0-5819e2354cf2", "name": "Webhook Handler: Receive Slack slash commands", "description": "Webhook workflow for receive slack slash commands", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/receive_slack_slash_commands", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to process form submissions. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "7879a76f-c61c-4cff-a005-8dce44df6637", "name": "Webhook Handler: Process form submissions", "description": "Webhook workflow for process form submissions", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/process_form_submissions", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to handle api rate limit notifications. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "3e7a8f8f-b338-4f24-95c9-3f605e8e879c", "name": "Webhook Handler: Handle API rate limit notifications", "description": "Webhook workflow for handle api rate limit notifications", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/handle_api_rate_limit_notifications", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to receive shipping status updates. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "36bcad0c-1ed6-47d5-ba00-7fb2ab44dd5b", "name": "Webhook Handler: Receive shipping status updates", "description": "Webhook workflow for receive shipping status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/receive_shipping_status_updates", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to process user registration webhooks. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "860e8539-f2c7-4c7d-90d9-f55414bff80a", "name": "Webhook Handler: Process user registration webhooks", "description": "Webhook workflow for process user registration webhooks", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/process_user_registration_webhooks", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to handle calendar event changes. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "7b8a7c7e-9174-4b11-8c28-1694a36f7920", "name": "Webhook Handler: Handle calendar event changes", "description": "Webhook workflow for handle calendar event changes", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/handle_calendar_event_changes", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to receive monitoring alerts. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "2e7b9d21-705d-4a58-a794-b8099faec3b8", "name": "Webhook Handler: Receive monitoring alerts", "description": "Webhook workflow for receive monitoring alerts", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/receive_monitoring_alerts", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Create a webhook handler to process survey completions. The system should process incoming webhooks automatically.", "workflow": {"workflowId": "b0976cc8-b99b-4f8e-a2fc-3a8096d7eba0", "name": "Webhook Handler: Process survey completions", "description": "Webhook workflow for process survey completions", "triggers": [{"node": "webhook", "parameters": {"path": "/webhooks/process_survey_completions", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "webhook_handler"}
{"prompt": "Implement conditional logic to route high-priority tickets to senior staff. The system should make decisions automatically.", "workflow": {"workflowId": "30c5ed57-5445-4bd9-9620-f61a2b0c3c88", "name": "Conditional Logic: Route high-priority tickets to senior staff", "description": "Conditional workflow for route high-priority tickets to senior staff", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for route high-priority tickets to senior staff", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to send different emails based on user tier. The system should make decisions automatically.", "workflow": {"workflowId": "32475b6c-6f9e-4fa9-ba31-f2effcb6ff96", "name": "Conditional Logic: Send different emails based on user tier", "description": "Conditional workflow for send different emails based on user tier", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for send different emails based on user tier", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to process orders differently by region. The system should make decisions automatically.", "workflow": {"workflowId": "65c0e77d-84ba-4890-a6b0-d87d7b11c06d", "name": "Conditional Logic: Process orders differently by region", "description": "Conditional workflow for process orders differently by region", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for process orders differently by region", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to apply discounts based on purchase history. The system should make decisions automatically.", "workflow": {"workflowId": "67739df8-f906-4dd0-9af4-7ae1fcfe13ab", "name": "Conditional Logic: Apply discounts based on purchase history", "description": "Conditional workflow for apply discounts based on purchase history", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for apply discounts based on purchase history", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to escalate issues based on severity. The system should make decisions automatically.", "workflow": {"workflowId": "78394923-2b71-436f-92c7-97850fcd568b", "name": "Conditional Logic: Escalate issues based on severity", "description": "Conditional workflow for escalate issues based on severity", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for escalate issues based on severity", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to customize notifications by user preferences. The system should make decisions automatically.", "workflow": {"workflowId": "206cfc06-9b3b-4084-93a5-2ca95f290a2b", "name": "Conditional Logic: Customize notifications by user preferences", "description": "Conditional workflow for customize notifications by user preferences", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for customize notifications by user preferences", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to filter content based on user role. The system should make decisions automatically.", "workflow": {"workflowId": "4002ae83-8958-4076-8c47-6165d9728c93", "name": "Conditional Logic: Filter content based on user role", "description": "Conditional workflow for filter content based on user role", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for filter content based on user role", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to adjust pricing based on market conditions. The system should make decisions automatically.", "workflow": {"workflowId": "27f13db5-de36-4670-a614-10784cd50c73", "name": "Conditional Logic: Adjust pricing based on market conditions", "description": "Conditional workflow for adjust pricing based on market conditions", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for adjust pricing based on market conditions", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to route calls based on time of day. The system should make decisions automatically.", "workflow": {"workflowId": "be132db2-91f1-4028-8fc9-3668daeb645a", "name": "Conditional Logic: Route calls based on time of day", "description": "Conditional workflow for route calls based on time of day", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for route calls based on time of day", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Implement conditional logic to process refunds based on product type. The system should make decisions automatically.", "workflow": {"workflowId": "1e43d6fc-ad6f-4c47-8a7c-c85e05cfd317", "name": "Conditional Logic: Process refunds based on product type", "description": "Conditional workflow for process refunds based on product type", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{$json.data} meets criteria for process refunds based on product type", "true_action": "execute_primary_workflow", "false_action": "execute_fallback_workflow"}}], "variables": []}}, "category": "conditional_logic"}
{"prompt": "Create a batch processing workflow to process batch of customer orders. The system should iterate through items automatically.", "workflow": {"workflowId": "e6ff5759-b012-48d7-a7a5-38abb9fe8280", "name": "Batch Processing: Process batch of customer orders", "description": "Loop workflow for process batch of customer orders", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.of}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to send personalized emails to subscriber list. The system should iterate through items automatically.", "workflow": {"workflowId": "d671a592-50fd-4a03-8a1f-2add391266a1", "name": "Batch Processing: Send personalized emails to subscriber list", "description": "Loop workflow for send personalized emails to subscriber list", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.emails}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to update multiple product prices. The system should iterate through items automatically.", "workflow": {"workflowId": "9be14a6f-061d-478a-8936-f9c172123fc6", "name": "Batch Processing: Update multiple product prices", "description": "Loop workflow for update multiple product prices", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.product}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to generate reports for all departments. The system should iterate through items automatically.", "workflow": {"workflowId": "774f0138-da65-4392-aec9-55ce7098fff4", "name": "Batch Processing: Generate reports for all departments", "description": "Loop workflow for generate reports for all departments", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.for}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to backup files from multiple directories. The system should iterate through items automatically.", "workflow": {"workflowId": "c2d2f5a9-e712-4270-9419-c9187713eb70", "name": "Batch Processing: Backup files from multiple directories", "description": "Loop workflow for backup files from multiple directories", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.from}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to send notifications to team members. The system should iterate through items automatically.", "workflow": {"workflowId": "831c4ee8-1b33-403f-892e-feafcf316df7", "name": "Batch Processing: Send notifications to team members", "description": "Loop workflow for send notifications to team members", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.to}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to process image gallery uploads. The system should iterate through items automatically.", "workflow": {"workflowId": "77db9199-481e-46a3-b4ef-e02f3efd6c88", "name": "Batch Processing: Process image gallery uploads", "description": "Loop workflow for process image gallery uploads", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.gallery}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to update inventory across locations. The system should iterate through items automatically.", "workflow": {"workflowId": "0aa50763-1de6-40a1-b733-f1d082dae652", "name": "Batch Processing: Update inventory across locations", "description": "Loop workflow for update inventory across locations", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.across}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to generate invoices for monthly clients. The system should iterate through items automatically.", "workflow": {"workflowId": "ec7da77f-b176-4558-8511-940cfff4af1a", "name": "Batch Processing: Generate invoices for monthly clients", "description": "Loop workflow for generate invoices for monthly clients", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.for}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Create a batch processing workflow to sync data across multiple databases. The system should iterate through items automatically.", "workflow": {"workflowId": "73e08d55-e51e-4d99-b485-2c2ee1dd42ec", "name": "Batch Processing: Sync data across multiple databases", "description": "Loop workflow for sync data across multiple databases", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "forEach", "parameters": {"array": "{$json.across}", "variable": "current_item"}}], "variables": []}}, "category": "loop_processing"}
{"prompt": "Set up automated voice calls for appointment confirmation calls to patients. The system should make calls automatically.", "workflow": {"workflowId": "95457b83-93fd-4f72-bf85-374c54fb6709", "name": "Voice Call: Appointment confirmation calls to patients", "description": "Voice workflow for appointment confirmation calls to patients", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for appointment confirmation calls to patients"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for emergency contact notifications. The system should make calls automatically.", "workflow": {"workflowId": "4a09e272-c200-4344-99bb-df5a45ae7f02", "name": "Voice Call: Emergency contact notifications", "description": "Voice workflow for emergency contact notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for emergency contact notifications"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for survey calls to recent customers. The system should make calls automatically.", "workflow": {"workflowId": "0b3c9eaa-5c35-4ff3-b730-211d37ccb533", "name": "Voice Call: Survey calls to recent customers", "description": "Voice workflow for survey calls to recent customers", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for survey calls to recent customers"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for reminder calls for scheduled services. The system should make calls automatically.", "workflow": {"workflowId": "7bc43ac0-816f-4576-9f72-3bf30ca68520", "name": "Voice Call: Reminder calls for scheduled services", "description": "Voice workflow for reminder calls for scheduled services", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for reminder calls for scheduled services"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for follow-up calls after support tickets. The system should make calls automatically.", "workflow": {"workflowId": "ebd5eff0-d656-4993-afd7-3650322b5862", "name": "Voice Call: Follow-up calls after support tickets", "description": "Voice workflow for follow-up calls after support tickets", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for follow-up calls after support tickets"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for welcome calls to new members. The system should make calls automatically.", "workflow": {"workflowId": "0864be21-f4de-4e60-893e-f7435bb28c92", "name": "Voice Call: Welcome calls to new members", "description": "Voice workflow for welcome calls to new members", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for welcome calls to new members"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for payment reminder voice messages. The system should make calls automatically.", "workflow": {"workflowId": "aa9c5355-f12b-4f2f-8a0f-2750c3e20f4f", "name": "Voice Call: Payment reminder voice messages", "description": "Voice workflow for payment reminder voice messages", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for payment reminder voice messages"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for event reminder calls. The system should make calls automatically.", "workflow": {"workflowId": "19bb8405-b4ce-4f12-b00c-0726d7b1fb56", "name": "Voice Call: Event reminder calls", "description": "Voice workflow for event reminder calls", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for event reminder calls"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for service outage notifications. The system should make calls automatically.", "workflow": {"workflowId": "ed134441-1346-4a43-87af-b62607197c8c", "name": "Voice Call: Service outage notifications", "description": "Voice workflow for service outage notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for service outage notifications"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "Set up automated voice calls for customer satisfaction surveys. The system should make calls automatically.", "workflow": {"workflowId": "c20a939d-eb61-42bd-8805-877f0416e088", "name": "Voice Call: Customer satisfaction surveys", "description": "Voice workflow for customer satisfaction surveys", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "Automated voice call for customer satisfaction surveys"}}], "logic": [], "variables": []}}, "category": "voice_call"}
{"prompt": "PRR Travels needs to send booking confirmation emails to travelers. Create an automated workflow that handles booking_completed and performs email_confirmation with booking details, itinerary, payment confirmation.", "workflow": {"workflowId": "c42e3664-a594-4f02-8584-6b5a04d546df", "name": "PRR Travels: Send booking confirmation emails to travelers", "description": "Automated workflow for PRR Travels to send booking confirmation emails to travelers", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to sms notifications for flight delays. Create an automated workflow that handles flight_status_change and performs sms_alert with new flight times, gate changes, delay duration.", "workflow": {"workflowId": "43c8d094-fa37-4f21-a6f7-f00005d5c28a", "name": "PRR Travels: SMS notifications for flight delays", "description": "Automated workflow for PRR Travels to sms notifications for flight delays", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to automated hotel booking reminders. Create an automated workflow that handles scheduled_reminder and performs email_reminder with check-in date, hotel details, special requests.", "workflow": {"workflowId": "4296a585-60b1-48fa-a76c-d32e51911089", "name": "PRR Travels: Automated hotel booking reminders", "description": "Automated workflow for PRR Travels to automated hotel booking reminders", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to generate travel insurance quotes. Create an automated workflow that handles quote_request and performs calculate_premium with trip details, traveler info, coverage options.", "workflow": {"workflowId": "c9ba33ad-f5a4-4d0f-a5de-4e7765333ed5", "name": "PRR Travels: Generate travel insurance quotes", "description": "Automated workflow for PRR Travels to generate travel insurance quotes", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to process visa application status updates. Create an automated workflow that handles visa_status_webhook and performs update_customer_record with application status, required documents, processing time.", "workflow": {"workflowId": "882ea6c7-c826-42b6-98df-704b4e37bb46", "name": "PRR Travels: Process visa application status updates", "description": "Automated workflow for PRR Travels to process visa application status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to send weather alerts for travel destinations. Create an automated workflow that handles weather_api_data and performs conditional_alert with destination weather, travel dates, alert thresholds.", "workflow": {"workflowId": "7aa623fa-6016-430d-8b62-112ce0d8d848", "name": "PRR Travels: Send weather alerts for travel destinations", "description": "Automated workflow for PRR Travels to send weather alerts for travel destinations", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to automated itinerary generation. Create an automated workflow that handles booking_finalized and performs generate_itinerary with flight details, hotel bookings, activity reservations.", "workflow": {"workflowId": "353a02fa-99e2-4e32-bb42-472b31f3532a", "name": "PRR Travels: Automated itinerary generation", "description": "Automated workflow for PRR Travels to automated itinerary generation", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to customer feedback collection after trips. Create an automated workflow that handles trip_completion and performs send_survey with trip experience, service rating, improvement suggestions.", "workflow": {"workflowId": "4045f4c6-e7be-42a4-862b-cb34296340a9", "name": "PRR Travels: Customer feedback collection after trips", "description": "Automated workflow for PRR Travels to customer feedback collection after trips", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to loyalty points calculation and updates. Create an automated workflow that handles booking_payment and performs calculate_points with booking value, customer tier, bonus multipliers.", "workflow": {"workflowId": "a0923cf3-3a16-49b6-a00c-0554b34d4cb8", "name": "PRR Travels: Loyalty points calculation and updates", "description": "Automated workflow for PRR Travels to loyalty points calculation and updates", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "PRR Travels needs to emergency contact notifications. Create an automated workflow that handles emergency_alert and performs mass_notification with affected travelers, emergency details, action required.", "workflow": {"workflowId": "e719811a-3da2-405d-b811-12070c56d41b", "name": "PRR Travels: Emergency contact notifications", "description": "Automated workflow for PRR Travels to emergency contact notifications", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "prr_travels_business", "business_context": "travel_agency"}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, if_else, sms_notification, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "33491022-11b8-4069-9cc0-3db31611a2f2", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "if_else", "sms_notification", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate voice_call, database_query to provide comprehensive automation.", "workflow": {"workflowId": "8655a777-524f-4cda-9aa5-a6d0150611a6", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "database_query"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate if_else, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "7d166aa9-c182-42cd-9758-19e09a8a9742", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate voice_call, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "07e64d5e-b803-4937-b6b5-24646880426a", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate webhook_handler, database_query, if_else, loop to provide comprehensive automation.", "workflow": {"workflowId": "0f60b53a-fda4-4b21-a874-df6b5f3c412b", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}, {"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "database_query", "if_else", "loop"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate if_else, scheduled_task, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "ba7290e6-4ce6-4cf2-b984-b748f1a56ce7", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "scheduled_task", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate loop, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "477d1c6d-3e6c-40af-83f6-fb501446ac08", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate sms_notification, ai_processing, if_else, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "c168cdf1-f97f-4ae7-b988-6ae9f12606af", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "ai_processing", "if_else", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "06299f98-58ba-47a8-83e4-74896ce1b4e5", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate email_automation, voice_call, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "98214f94-c6c6-4bc9-8ae5-24414f3fbc28", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "voice_call", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate email_automation, voice_call, sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "dcb76c40-23cd-4274-ae9b-fbd2620efb7a", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "voice_call", "sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate if_else, http_request to provide comprehensive automation.", "workflow": {"workflowId": "defdc938-2798-48b8-b5ba-005d2173c956", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "http_request"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate if_else, loop, scheduled_task, database_query to provide comprehensive automation.", "workflow": {"workflowId": "5f2dc60a-2b6f-4df0-82f1-6d8e994bd888", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}, {"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "loop", "scheduled_task", "database_query"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate loop, database_query, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "196c1621-4cdd-4c04-895b-84ec4c8f2f75", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "database_query", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate webhook_handler, loop, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "1f17c350-5ef9-4a5f-bf9a-06c24c0748d0", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "loop", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate scheduled_task, voice_call, webhook_handler, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "4fc11b9e-b1e2-4f1e-9254-66fb06892fe1", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "voice_call", "webhook_handler", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate if_else, ai_processing, http_request, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "397cf6d7-6d05-4f07-bc1b-bdc10c8f76ee", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "ai_processing", "http_request", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate http_request, if_else to provide comprehensive automation.", "workflow": {"workflowId": "98cbb314-e953-4774-b138-555b72ed419a", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "if_else"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate sms_notification, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "939787db-0068-4eb8-9f91-289ddbd7fd7e", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate sms_notification, loop, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "2c9f1868-d4c4-4901-adb5-b7266ac862a3", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "loop", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate database_query, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "8a570824-4194-46a9-a76e-e2c451e09351", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate http_request, sms_notification, email_automation, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "442e0203-8fb9-45dc-a32d-fb9e784eb50c", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "sms_notification", "email_automation", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate email_automation, ai_processing, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "d0c08913-0308-4b5b-9ed5-6969da89cf23", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "ai_processing", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate webhook_handler, http_request, ai_processing, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "bf835712-c565-407c-a1e7-09cf0165fd68", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "http_request", "ai_processing", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate scheduled_task, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "8ca16d08-e105-4a00-b1e6-205e86707ae8", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate ai_processing, database_query to provide comprehensive automation.", "workflow": {"workflowId": "1e68bf0c-1b3a-4087-966f-4b5afb8fb1e0", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "database_query"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate database_query, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "70f24639-1fa2-465c-8038-5807e2823119", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate if_else, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "1d9aa025-20b5-470b-9b12-e7c37ba45204", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate http_request, voice_call, loop, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "d3e71dca-1875-45db-8ebb-1a80c77d244e", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "voice_call", "loop", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate ai_processing, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "9498c968-a506-48ea-a86c-12dcdbcb0e13", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "4cd3762b-f2b8-423c-94b6-ca7078d5b2ee", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate email_automation, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "662fd33a-b4ee-443f-9e77-11b1aeb559cc", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate loop, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "048259fd-d295-4bc8-96f2-28d113fc0a2d", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate ai_processing, http_request, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "d5c77d41-5c07-4e5f-9cc2-71f5d0e1f26a", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "http_request", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate http_request, email_automation, ai_processing, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "1853512f-d25a-4b66-82b6-f547e681be3a", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "email_automation", "ai_processing", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate database_query, loop to provide comprehensive automation.", "workflow": {"workflowId": "2d3e8eeb-68d5-4f88-b811-3b9b0a5b706e", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "loop"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate voice_call, sms_notification, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "dfd86b0c-4a7a-4dc5-a946-005d2405163d", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "sms_notification", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate email_automation, loop, scheduled_task, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "e56aee26-223e-49b6-8cef-9ab36950f4ca", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "loop", "scheduled_task", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate email_automation, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "17cb3bf9-90c9-497a-8508-160e22792b37", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate loop, scheduled_task, email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "cc190656-de5d-4fdc-ab50-7d3f9b88d9dd", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "scheduled_task", "email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, database_query, scheduled_task, if_else to provide comprehensive automation.", "workflow": {"workflowId": "36a855f3-1939-47cf-9823-38348debe99d", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "database_query", "scheduled_task", "if_else"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate sms_notification, database_query, loop, http_request to provide comprehensive automation.", "workflow": {"workflowId": "77bcbb14-da3f-45fa-9685-ceabf56de367", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "database_query", "loop", "http_request"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate webhook_handler, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "43e17d72-25c6-4fac-aeaa-42c0b8590213", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate webhook_handler, if_else to provide comprehensive automation.", "workflow": {"workflowId": "65d4110f-5386-4ffe-8499-c9230620b833", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate loop, email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "21ef39b4-f231-466c-bd51-79587910d84e", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "9215bc0a-9844-4161-8aca-36f4577fedc4", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate webhook_handler, scheduled_task, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "6ba7479b-e161-41c5-8895-e9f00182a05d", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "scheduled_task", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate ai_processing, email_automation, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "57bc2359-535a-4540-91de-71c94d1ee37f", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "email_automation", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate webhook_handler, ai_processing, voice_call, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "3032a9e2-f89e-4901-beb4-c765ca5ca170", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "ai_processing", "voice_call", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate webhook_handler, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "e81f0f87-59c9-4d11-82a5-97f13d1c42d5", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, voice_call, email_automation, database_query to provide comprehensive automation.", "workflow": {"workflowId": "1408ec2e-c237-4c9a-8206-7173b31e60d7", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "voice_call", "email_automation", "database_query"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate webhook_handler, ai_processing, voice_call, if_else to provide comprehensive automation.", "workflow": {"workflowId": "4b47f33d-a9ad-4eb1-b59d-fcb04f0394b3", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "ai_processing", "voice_call", "if_else"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate email_automation, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "af8ef507-094b-461f-829f-9b6c01566cbc", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate scheduled_task, if_else to provide comprehensive automation.", "workflow": {"workflowId": "2a529f1a-f1f5-4dd5-99ee-b1c296f2bf51", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate database_query, http_request to provide comprehensive automation.", "workflow": {"workflowId": "c444bcc0-6d19-43fe-b831-e97bd1b69893", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "http_request"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate ai_processing, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "f91d990e-0507-4a12-9bac-7db6d35e5bb6", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate scheduled_task, sms_notification, ai_processing, loop to provide comprehensive automation.", "workflow": {"workflowId": "a971fcac-09e8-4bb5-9543-0ba8b2633131", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "sms_notification", "ai_processing", "loop"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate loop, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "6685522b-5a1e-4e14-8c1d-d55dbe805d45", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate http_request, loop, ai_processing, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "b3f707db-50b2-4175-9b2c-66a53b35d4fe", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "loop", "ai_processing", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate voice_call, scheduled_task, loop, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "f0183a39-322e-4e3b-9e03-000811c01281", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "scheduled_task", "loop", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "a87bd446-20dd-416b-b1ca-f245302170ac", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate voice_call, loop, database_query to provide comprehensive automation.", "workflow": {"workflowId": "10050549-b3cc-4ce2-8bf7-e25ffa0b16d9", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "loop", "database_query"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate database_query, webhook_handler, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "e10be99a-f613-4a34-afad-c7847c1a8fa3", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "webhook_handler", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate sms_notification, ai_processing, if_else to provide comprehensive automation.", "workflow": {"workflowId": "c0b277c0-2fd9-4d71-9f09-de2874ecad09", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "ai_processing", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "10e58501-61a1-48aa-93c7-562d3914f589", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate loop, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "12c708ee-3958-4b8b-a63b-a7f562de88e4", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate http_request, database_query, if_else, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "aa0fac4f-bd25-4a88-a984-040d6390cae3", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "database_query", "if_else", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate if_else, scheduled_task, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "7a1cff22-7de8-4182-abf1-23b2de5af71b", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "scheduled_task", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate loop, if_else, http_request to provide comprehensive automation.", "workflow": {"workflowId": "b998cf4b-a9e1-4c01-8898-b4bb3f9bfaf1", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "if_else", "http_request"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate http_request, ai_processing, database_query, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "08b91093-0f7c-4d2f-8258-7a020e6beeab", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "ai_processing", "database_query", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, ai_processing, sms_notification, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "db19eed3-0cf9-43b0-a3c9-232a3f257500", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "ai_processing", "sms_notification", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate voice_call, database_query to provide comprehensive automation.", "workflow": {"workflowId": "2f4b2c16-c9cf-44a5-b1a5-6df204094067", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "database_query"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate email_automation, database_query, ai_processing, if_else to provide comprehensive automation.", "workflow": {"workflowId": "60df21dc-2228-4697-b956-8fc3f9f43968", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "database_query", "ai_processing", "if_else"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate webhook_handler, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "0a3d2f78-7f82-4248-a5ef-dad4a088e203", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate voice_call, if_else, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "8a8d6020-3fc2-41de-b0ca-370fd8d36490", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "if_else", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate sms_notification, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "7598d9e6-5d4d-4336-8dfb-e403ad667f37", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate sms_notification, voice_call, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "b916cdf7-eebc-4aee-8fa0-493580281d6c", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "voice_call", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate webhook_handler, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "1a28f300-b9fd-4a3d-9124-3c1072eaaf02", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate webhook_handler, http_request to provide comprehensive automation.", "workflow": {"workflowId": "aaf1861b-89a7-41b8-a28c-5196b2602917", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "http_request"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate voice_call, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "770cd301-c934-4184-8077-5c616c4dd355", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate voice_call, database_query, http_request, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "887c8020-2d91-4800-9790-73aec53c40d6", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "database_query", "http_request", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate if_else, http_request, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "302dd1b0-8eb2-4626-b763-b943fc8da62f", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "http_request", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate http_request, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "d6a9ade0-ce2a-4eb4-91d2-daee0c6cb722", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate scheduled_task, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "42aadb03-8232-4e03-8ac2-fcc8ad7c1658", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "cf93413d-92ff-4003-b2f2-f711f6a766b3", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate webhook_handler, email_automation, if_else, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "5da8dcd4-117f-45cc-b92e-5b2afa74f68c", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "email_automation", "if_else", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate ai_processing, email_automation, http_request, if_else to provide comprehensive automation.", "workflow": {"workflowId": "1a6ebd51-b972-4bae-9036-81b166494ba7", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "email_automation", "http_request", "if_else"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate ai_processing, email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "106388a9-57de-4491-af11-38ace8e655ff", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate sms_notification, database_query to provide comprehensive automation.", "workflow": {"workflowId": "d2ca9a30-a88e-476e-979d-06f67bad0d0b", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "database_query"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate loop, sms_notification, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "5d3007ed-4994-41d8-90c4-c5013c586b0d", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "sms_notification", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate webhook_handler, database_query, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "897bf5a2-06e8-46e3-a9cb-da2107191c90", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "database_query", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate scheduled_task, database_query, loop to provide comprehensive automation.", "workflow": {"workflowId": "07187ee0-9fc6-41f3-87f8-bf3ec29f8716", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "database_query", "loop"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate database_query, voice_call, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "6ed0d9c4-e433-4833-b967-d87495cba79b", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "voice_call", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate sms_notification, loop, http_request, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "e3ff4a81-9b81-4527-9ec5-844e111c2d87", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "loop", "http_request", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate email_automation, if_else, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "449dab39-be02-4bdd-9870-e6a93af5b596", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "if_else", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate loop, webhook_handler, database_query to provide comprehensive automation.", "workflow": {"workflowId": "e1a7c262-f7d0-4318-b9e6-74732708d55b", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "webhook_handler", "database_query"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate if_else, http_request to provide comprehensive automation.", "workflow": {"workflowId": "9ef98e2e-2fd1-42d6-8443-479a70a4678f", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "http_request"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate database_query, loop, ai_processing, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "dd073d64-c376-40e2-8f47-229e68c7bed7", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "loop", "ai_processing", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate loop, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "2fa262b7-3c6d-49bd-9c0c-1c1de894b8cf", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate email_automation, sms_notification, voice_call, if_else to provide comprehensive automation.", "workflow": {"workflowId": "3262002b-0425-44db-a49a-fa8752b3dc7a", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "sms_notification", "voice_call", "if_else"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate voice_call, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "9a22434c-b423-439d-b5c3-5582f121a76e", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate email_automation, voice_call, webhook_handler, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "b5f9b676-5cdc-4a0b-8947-d1926478a4a9", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "voice_call", "webhook_handler", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate database_query, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "8c2312de-2e85-4469-903e-42de19669a18", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate loop, webhook_handler, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "b437c430-fd58-4bdb-9bc2-6427f4dbcec5", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "webhook_handler", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate email_automation, http_request, sms_notification, database_query to provide comprehensive automation.", "workflow": {"workflowId": "4c70693f-23e5-49d3-95e5-e80cd2683443", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "http_request", "sms_notification", "database_query"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate if_else, scheduled_task, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "24f8aa99-6d32-4d35-a1af-bb3fe5c8ba0f", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "scheduled_task", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate webhook_handler, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "0135274e-72bb-4b3f-b270-162af3d86c86", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate scheduled_task, http_request, if_else to provide comprehensive automation.", "workflow": {"workflowId": "98b4bcc9-9eaa-4b60-8117-4455a23a024a", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "http_request", "if_else"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate email_automation, sms_notification, webhook_handler, http_request to provide comprehensive automation.", "workflow": {"workflowId": "7119ddda-0981-45ea-b1a6-601bc768d202", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "sms_notification", "webhook_handler", "http_request"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate sms_notification, http_request to provide comprehensive automation.", "workflow": {"workflowId": "23041fa6-b2b2-44b6-a0d1-b24f56b6e5ed", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "http_request"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate loop, database_query to provide comprehensive automation.", "workflow": {"workflowId": "048d5878-580c-4be8-9c17-d1c7a1830c13", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "database_query"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate http_request, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "dcf6ebdd-b907-43b9-8624-52d55adb15d3", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate voice_call, sms_notification, ai_processing, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "aeea756b-e4b7-4ee5-ae2e-dc02002842b5", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "sms_notification", "ai_processing", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate http_request, voice_call, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "50d8cb67-bbb3-4a0f-81ae-5a6c914a8569", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "voice_call", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate ai_processing, loop to provide comprehensive automation.", "workflow": {"workflowId": "e7694cca-2553-47ca-bdcc-2ca49c0b1cc1", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "loop"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate sms_notification, if_else, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "c4ab53aa-820b-4aca-a4f1-23851c8a5752", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "if_else", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate ai_processing, if_else to provide comprehensive automation.", "workflow": {"workflowId": "76baeaa3-7d50-4486-bc86-5d9ca5e97a78", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "if_else"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate webhook_handler, scheduled_task, http_request, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "0b8eaba4-533c-4401-95b7-ab320ce3a2fa", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "scheduled_task", "http_request", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate ai_processing, loop, if_else to provide comprehensive automation.", "workflow": {"workflowId": "20e80393-7b29-47b1-9790-d2079c2ed57b", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "fileWatch", "parameters": {"path": "/uploads", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["ai_processing", "loop", "if_else"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate if_else, http_request, voice_call, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "c788afc9-e5fa-418a-954c-7b927c872410", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "http_request", "voice_call", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, if_else to provide comprehensive automation.", "workflow": {"workflowId": "c957b463-3b58-468d-85a2-1a870b9331d0", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "if_else"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate voice_call, scheduled_task, http_request, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "ae3d5699-6e10-4918-b42c-76ceb407c700", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "scheduled_task", "http_request", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate loop, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "bf7896e8-fb43-4b1d-8f86-3e00136add43", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate if_else, loop to provide comprehensive automation.", "workflow": {"workflowId": "7f427ce8-c85f-4557-a193-8a406caba14f", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [], "workflow": {"actions": [], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}, {"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "loop"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate sms_notification, if_else to provide comprehensive automation.", "workflow": {"workflowId": "e8be979a-d617-46d5-96e0-2ce08b1675df", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "if_else"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate email_automation, loop to provide comprehensive automation.", "workflow": {"workflowId": "e5513217-0203-4e32-9a49-34ca3a03f1df", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "loop"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate webhook_handler, if_else, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "1302e6ab-afe3-4393-8f57-72329196645a", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "if_else", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate sms_notification, scheduled_task, http_request to provide comprehensive automation.", "workflow": {"workflowId": "046222fc-f4e4-4c47-80a5-a1a53ee99737", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "scheduled_task", "http_request"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate http_request, email_automation, sms_notification, webhook_handler to provide comprehensive automation.", "workflow": {"workflowId": "c665a1eb-2e25-4cf3-8269-b7ff7ec14a72", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "email_automation", "sms_notification", "webhook_handler"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate if_else, database_query to provide comprehensive automation.", "workflow": {"workflowId": "778d6da9-20f2-47c7-824e-f793223820ec", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "database_query"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate voice_call, ai_processing, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "b4f88f12-df93-4948-9f0d-b990300ddd6e", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "ai_processing", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate sms_notification, database_query, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "78ac1f2b-86ad-420d-829c-919124ccaf1a", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "database_query", "voice_call"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate if_else, email_automation, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "d2d356fc-77fe-4337-b3d9-8f7d313650c9", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "email_automation", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate scheduled_task, http_request, email_automation to provide comprehensive automation.", "workflow": {"workflowId": "f055f591-bec6-4e0d-a864-6906ad0742f6", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "http_request", "email_automation"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate webhook_handler, http_request to provide comprehensive automation.", "workflow": {"workflowId": "fa535387-890d-488a-b39b-b3add5f49e2a", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "http_request"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate if_else, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "bb5183d3-ad48-4026-8066-ba2e40653263", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate http_request, database_query to provide comprehensive automation.", "workflow": {"workflowId": "db4a9538-09be-4459-a3dc-73f6cd54593e", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "database_query"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate email_automation, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "6b7c0f79-49b6-40fb-8388-687b3e54da88", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate voice_call, http_request to provide comprehensive automation.", "workflow": {"workflowId": "79f51fe1-a0ce-4aa2-885b-b8f5af9ae74d", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "schedule", "parameters": {"interval": "once", "datetime": "2024-01-01T10:00:00Z"}}], "workflow": {"actions": [{"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["voice_call", "http_request"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate scheduled_task, http_request, email_automation, if_else to provide comprehensive automation.", "workflow": {"workflowId": "b57223c5-be03-44fa-9c6a-684bc471155a", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "http_request", "email_automation", "if_else"]}
{"prompt": "Create a complex multi-step workflow for multi-step customer onboarding. The workflow should integrate http_request, database_query, if_else to provide comprehensive automation.", "workflow": {"workflowId": "9bc6446f-2dc6-4e51-8229-982b3641e46b", "name": "Complex Workflow: Multi-step customer onboarding", "description": "Multi-step automated workflow for multi-step customer onboarding", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/data", "method": "GET", "headers": {"Content-Type": "application/json"}}}, {"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["http_request", "database_query", "if_else"]}
{"prompt": "Create a complex multi-step workflow for complex order processing pipeline. The workflow should integrate webhook_handler, email_automation, scheduled_task to provide comprehensive automation.", "workflow": {"workflowId": "d809bdab-cdc0-4bde-921d-09740b18080c", "name": "Complex Workflow: Complex order processing pipeline", "description": "Multi-step automated workflow for complex order processing pipeline", "triggers": [{"node": "webhook", "parameters": {"path": "/incoming_event", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["webhook_handler", "email_automation", "scheduled_task"]}
{"prompt": "Create a complex multi-step workflow for advanced user engagement system. The workflow should integrate email_automation, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "2e459e19-44b0-4238-ae59-6f1e95c30ef8", "name": "Complex Workflow: Advanced user engagement system", "description": "Multi-step automated workflow for advanced user engagement system", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["email_automation", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for comprehensive data analytics workflow. The workflow should integrate scheduled_task, voice_call, ai_processing to provide comprehensive automation.", "workflow": {"workflowId": "5928b2ad-a6e9-4acc-86a6-1b97e4c62971", "name": "Complex Workflow: Comprehensive data analytics workflow", "description": "Multi-step automated workflow for comprehensive data analytics workflow", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "voice_call", "ai_processing"]}
{"prompt": "Create a complex multi-step workflow for integrated marketing automation. The workflow should integrate database_query, email_automation, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "649be22d-5d0e-4413-96b5-5722d850d9e3", "name": "Complex Workflow: Integrated marketing automation", "description": "Multi-step automated workflow for integrated marketing automation", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["database_query", "email_automation", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for full-cycle project management. The workflow should integrate loop, if_else, database_query to provide comprehensive automation.", "workflow": {"workflowId": "605012f3-91c9-4ca1-b7f3-ec231d3cd9b0", "name": "Complex Workflow: Full-cycle project management", "description": "Multi-step automated workflow for full-cycle project management", "triggers": [], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM users WHERE active = true", "database": "main_db"}}], "logic": [{"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}, {"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["loop", "if_else", "database_query"]}
{"prompt": "Create a complex multi-step workflow for complete customer support workflow. The workflow should integrate if_else, webhook_handler, loop to provide comprehensive automation.", "workflow": {"workflowId": "72653c82-6187-42c4-803e-d234e264f7de", "name": "Complex Workflow: Complete customer support workflow", "description": "Multi-step automated workflow for complete customer support workflow", "triggers": [], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://example.com/process_webhook_data", "method": "POST", "body": "{{$json.webhook_payload}}"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}, {"node": "forEach", "parameters": {"array": "{{$json.items}}", "variable": "item"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["if_else", "webhook_handler", "loop"]}
{"prompt": "Create a complex multi-step workflow for advanced inventory management. The workflow should integrate sms_notification, scheduled_task, if_else to provide comprehensive automation.", "workflow": {"workflowId": "4ceadf13-fc60-413b-990d-8cc67f7b1ceb", "name": "Complex Workflow: Advanced inventory management", "description": "Multi-step automated workflow for advanced inventory management", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}], "logic": [{"node": "ifElse", "parameters": {"condition": "{{$json.status}} === 'active'", "true_action": "continue", "false_action": "stop"}}], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "scheduled_task", "if_else"]}
{"prompt": "Create a complex multi-step workflow for comprehensive audit trail system. The workflow should integrate scheduled_task, email_automation, ai_processing, sms_notification to provide comprehensive automation.", "workflow": {"workflowId": "42b379b1-af45-452e-b34a-baddfefd696a", "name": "Complex Workflow: Comprehensive audit trail system", "description": "Multi-step automated workflow for comprehensive audit trail system", "triggers": [{"node": "cron", "parameters": {"expression": "0 0 * * 0", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "script", "parameters": {"language": "python", "code": "print('Weekly task executed')"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "openAI", "parameters": {"model": "gpt-4", "prompt": "Analyze this content and provide insights", "input": "{{$json.file_content}}"}}, {"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["scheduled_task", "email_automation", "ai_processing", "sms_notification"]}
{"prompt": "Create a complex multi-step workflow for integrated communication platform. The workflow should integrate sms_notification, email_automation, voice_call to provide comprehensive automation.", "workflow": {"workflowId": "5e34222c-7d7f-4522-b3cf-cd69b0cc3278", "name": "Complex Workflow: Integrated communication platform", "description": "Multi-step automated workflow for integrated communication platform", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS notification"}}, {"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated Email", "body": "This is an automated email."}}, {"node": "twilioCall", "parameters": {"to": "+1234567890", "message": "This is an automated voice call"}}], "logic": [], "variables": []}}, "category": "complex_workflow", "complexity": "high", "workflow_types": ["sms_notification", "email_automation", "voice_call"]}
{"prompt": "Variation 1: Create an email automation workflow: Send daily morning briefings to team members. The workflow should send daily morning briefings to team members automatically.", "workflow": {"workflowId": "737da4e4-3d1e-41dd-b57a-cf30b9627334", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Send daily morning briefings to team members", "description": "Automated workflow for send daily morning briefings to team members", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Send daily morning briefings to team members", "body": "This is an automated email for send daily morning briefings to team members"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Send daily morning briefings to team members. The workflow should send daily morning briefings to team members automatically.", "workflow": {"workflowId": "737da4e4-3d1e-41dd-b57a-cf30b9627334", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Send daily morning briefings to team members", "description": "Automated workflow for send daily morning briefings to team members", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Send daily morning briefings to team members", "body": "This is an automated email for send daily morning briefings to team members"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Send daily morning briefings to team members. The workflow should send daily morning briefings to team members automatically.", "workflow": {"workflowId": "737da4e4-3d1e-41dd-b57a-cf30b9627334", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Send daily morning briefings to team members", "description": "Automated workflow for send daily morning briefings to team members", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Send daily morning briefings to team members", "body": "This is an automated email for send daily morning briefings to team members"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Automated birthday wishes to customers. The workflow should automated birthday wishes to customers automatically.", "workflow": {"workflowId": "30d436e7-7536-4a2c-846c-b4351104d075", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Automated birthday wishes to customers", "description": "Automated workflow for automated birthday wishes to customers", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Automated birthday wishes to customers", "body": "This is an automated email for automated birthday wishes to customers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Automated birthday wishes to customers. The workflow should automated birthday wishes to customers automatically.", "workflow": {"workflowId": "30d436e7-7536-4a2c-846c-b4351104d075", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Automated birthday wishes to customers", "description": "Automated workflow for automated birthday wishes to customers", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Automated birthday wishes to customers", "body": "This is an automated email for automated birthday wishes to customers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Automated birthday wishes to customers. The workflow should automated birthday wishes to customers automatically.", "workflow": {"workflowId": "30d436e7-7536-4a2c-846c-b4351104d075", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Automated birthday wishes to customers", "description": "Automated workflow for automated birthday wishes to customers", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Automated birthday wishes to customers", "body": "This is an automated email for automated birthday wishes to customers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Weekly project status updates to stakeholders. The workflow should weekly project status updates to stakeholders automatically.", "workflow": {"workflowId": "76d34c60-a6ed-4d0f-9e7c-21ab0bb904f1", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Weekly project status updates to stakeholders", "description": "Automated workflow for weekly project status updates to stakeholders", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Weekly project status updates to stakeholders", "body": "This is an automated email for weekly project status updates to stakeholders"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Weekly project status updates to stakeholders. The workflow should weekly project status updates to stakeholders automatically.", "workflow": {"workflowId": "76d34c60-a6ed-4d0f-9e7c-21ab0bb904f1", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Weekly project status updates to stakeholders", "description": "Automated workflow for weekly project status updates to stakeholders", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Weekly project status updates to stakeholders", "body": "This is an automated email for weekly project status updates to stakeholders"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Weekly project status updates to stakeholders. The workflow should weekly project status updates to stakeholders automatically.", "workflow": {"workflowId": "76d34c60-a6ed-4d0f-9e7c-21ab0bb904f1", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Weekly project status updates to stakeholders", "description": "Automated workflow for weekly project status updates to stakeholders", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Weekly project status updates to stakeholders", "body": "This is an automated email for weekly project status updates to stakeholders"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Follow-up emails after customer purchases. The workflow should follow-up emails after customer purchases automatically.", "workflow": {"workflowId": "940ce81d-2c46-4e91-8a85-89673dfd441b", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Follow-up emails after customer purchases", "description": "Automated workflow for follow-up emails after customer purchases", "triggers": [{"node": "cron", "parameters": {"expression": "0 8 * * 1-5", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Follow-up emails after customer purchases", "body": "This is an automated email for follow-up emails after customer purchases"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Follow-up emails after customer purchases. The workflow should follow-up emails after customer purchases automatically.", "workflow": {"workflowId": "940ce81d-2c46-4e91-8a85-89673dfd441b", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Follow-up emails after customer purchases", "description": "Automated workflow for follow-up emails after customer purchases", "triggers": [{"node": "cron", "parameters": {"expression": "0 8 * * 1-5", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Follow-up emails after customer purchases", "body": "This is an automated email for follow-up emails after customer purchases"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Follow-up emails after customer purchases. The workflow should follow-up emails after customer purchases automatically.", "workflow": {"workflowId": "940ce81d-2c46-4e91-8a85-89673dfd441b", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Follow-up emails after customer purchases", "description": "Automated workflow for follow-up emails after customer purchases", "triggers": [{"node": "cron", "parameters": {"expression": "0 8 * * 1-5", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Follow-up emails after customer purchases", "body": "This is an automated email for follow-up emails after customer purchases"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Reminder emails for upcoming meetings. The workflow should reminder emails for upcoming meetings automatically.", "workflow": {"workflowId": "2376f893-2d53-4fc1-8720-5625b6527744", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Reminder emails for upcoming meetings", "description": "Automated workflow for reminder emails for upcoming meetings", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Reminder emails for upcoming meetings", "body": "This is an automated email for reminder emails for upcoming meetings"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Reminder emails for upcoming meetings. The workflow should reminder emails for upcoming meetings automatically.", "workflow": {"workflowId": "2376f893-2d53-4fc1-8720-5625b6527744", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Reminder emails for upcoming meetings", "description": "Automated workflow for reminder emails for upcoming meetings", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Reminder emails for upcoming meetings", "body": "This is an automated email for reminder emails for upcoming meetings"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Reminder emails for upcoming meetings. The workflow should reminder emails for upcoming meetings automatically.", "workflow": {"workflowId": "2376f893-2d53-4fc1-8720-5625b6527744", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Reminder emails for upcoming meetings", "description": "Automated workflow for reminder emails for upcoming meetings", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Reminder emails for upcoming meetings", "body": "This is an automated email for reminder emails for upcoming meetings"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Newsletter automation for subscribers. The workflow should newsletter automation for subscribers automatically.", "workflow": {"workflowId": "2d2c4214-fed3-447d-90ee-af4abc927d17", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Newsletter automation for subscribers", "description": "Automated workflow for newsletter automation for subscribers", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Newsletter automation for subscribers", "body": "This is an automated email for newsletter automation for subscribers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Newsletter automation for subscribers. The workflow should newsletter automation for subscribers automatically.", "workflow": {"workflowId": "2d2c4214-fed3-447d-90ee-af4abc927d17", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Newsletter automation for subscribers", "description": "Automated workflow for newsletter automation for subscribers", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Newsletter automation for subscribers", "body": "This is an automated email for newsletter automation for subscribers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Newsletter automation for subscribers. The workflow should newsletter automation for subscribers automatically.", "workflow": {"workflowId": "2d2c4214-fed3-447d-90ee-af4abc927d17", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Newsletter automation for subscribers", "description": "Automated workflow for newsletter automation for subscribers", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Newsletter automation for subscribers", "body": "This is an automated email for newsletter automation for subscribers"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Welcome email series for new users. The workflow should welcome email series for new users automatically.", "workflow": {"workflowId": "0cda041b-5163-489e-a669-70ed5e8046bd", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Welcome email series for new users", "description": "Automated workflow for welcome email series for new users", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Welcome email series for new users", "body": "This is an automated email for welcome email series for new users"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Welcome email series for new users. The workflow should welcome email series for new users automatically.", "workflow": {"workflowId": "0cda041b-5163-489e-a669-70ed5e8046bd", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Welcome email series for new users", "description": "Automated workflow for welcome email series for new users", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Welcome email series for new users", "body": "This is an automated email for welcome email series for new users"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Welcome email series for new users. The workflow should welcome email series for new users automatically.", "workflow": {"workflowId": "0cda041b-5163-489e-a669-70ed5e8046bd", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Welcome email series for new users", "description": "Automated workflow for welcome email series for new users", "triggers": [{"node": "cron", "parameters": {"expression": "0 12 * * 1", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Welcome email series for new users", "body": "This is an automated email for welcome email series for new users"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Abandoned cart recovery emails. The workflow should abandoned cart recovery emails automatically.", "workflow": {"workflowId": "0259bd77-202a-4771-ba58-a56baa2bcd0c", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Abandoned cart recovery emails", "description": "Automated workflow for abandoned cart recovery emails", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Abandoned cart recovery emails", "body": "This is an automated email for abandoned cart recovery emails"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Abandoned cart recovery emails. The workflow should abandoned cart recovery emails automatically.", "workflow": {"workflowId": "0259bd77-202a-4771-ba58-a56baa2bcd0c", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Abandoned cart recovery emails", "description": "Automated workflow for abandoned cart recovery emails", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Abandoned cart recovery emails", "body": "This is an automated email for abandoned cart recovery emails"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Abandoned cart recovery emails. The workflow should abandoned cart recovery emails automatically.", "workflow": {"workflowId": "0259bd77-202a-4771-ba58-a56baa2bcd0c", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Abandoned cart recovery emails", "description": "Automated workflow for abandoned cart recovery emails", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Abandoned cart recovery emails", "body": "This is an automated email for abandoned cart recovery emails"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Invoice reminders for overdue payments. The workflow should invoice reminders for overdue payments automatically.", "workflow": {"workflowId": "1a72c46a-7dcf-490f-862a-81e442f0d0d0", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Invoice reminders for overdue payments", "description": "Automated workflow for invoice reminders for overdue payments", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Invoice reminders for overdue payments", "body": "This is an automated email for invoice reminders for overdue payments"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Invoice reminders for overdue payments. The workflow should invoice reminders for overdue payments automatically.", "workflow": {"workflowId": "1a72c46a-7dcf-490f-862a-81e442f0d0d0", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Invoice reminders for overdue payments", "description": "Automated workflow for invoice reminders for overdue payments", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Invoice reminders for overdue payments", "body": "This is an automated email for invoice reminders for overdue payments"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Invoice reminders for overdue payments. The workflow should invoice reminders for overdue payments automatically.", "workflow": {"workflowId": "1a72c46a-7dcf-490f-862a-81e442f0d0d0", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Invoice reminders for overdue payments", "description": "Automated workflow for invoice reminders for overdue payments", "triggers": [{"node": "cron", "parameters": {"expression": "0 9 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "user@example.com", "subject": "Automated: Invoice reminders for overdue payments", "body": "This is an automated email for invoice reminders for overdue payments"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Create an email automation workflow: Event invitation emails with RSVP tracking. The workflow should event invitation emails with rsvp tracking automatically.", "workflow": {"workflowId": "e7b3b125-cc06-4d65-8d21-4ef7e3803289", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Event invitation emails with RSVP tracking", "description": "Automated workflow for event invitation emails with rsvp tracking", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Event invitation emails with RSVP tracking", "body": "This is an automated email for event invitation emails with rsvp tracking"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 2: Create an email automation workflow: Event invitation emails with RSVP tracking. The workflow should event invitation emails with rsvp tracking automatically.", "workflow": {"workflowId": "e7b3b125-cc06-4d65-8d21-4ef7e3803289", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Event invitation emails with RSVP tracking", "description": "Automated workflow for event invitation emails with rsvp tracking", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Event invitation emails with RSVP tracking", "body": "This is an automated email for event invitation emails with rsvp tracking"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 3: Create an email automation workflow: Event invitation emails with RSVP tracking. The workflow should event invitation emails with rsvp tracking automatically.", "workflow": {"workflowId": "e7b3b125-cc06-4d65-8d21-4ef7e3803289", "name": "Variation 3: Variation 2: Variation 1: Email Automation: Event invitation emails with RSVP tracking", "description": "Automated workflow for event invitation emails with rsvp tracking", "triggers": [{"node": "cron", "parameters": {"expression": "0 18 * * *", "timezone": "UTC"}}], "workflow": {"actions": [{"node": "email", "parameters": {"to": "team@company.com", "subject": "Automated: Event invitation emails with RSVP tracking", "body": "This is an automated email for event invitation emails with rsvp tracking"}}], "logic": [], "variables": []}}, "category": "email_automation_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to sync customer data between crm and marketing platform. The system should handle API calls automatically.", "workflow": {"workflowId": "d13d8c12-19fd-4ff0-95d2-1aa84e64eb78", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync customer data between CRM and marketing platform", "description": "HTTP workflow for sync customer data between crm and marketing platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_customer_data_between_crm_and_marketing_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to sync customer data between crm and marketing platform. The system should handle API calls automatically.", "workflow": {"workflowId": "d13d8c12-19fd-4ff0-95d2-1aa84e64eb78", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync customer data between CRM and marketing platform", "description": "HTTP workflow for sync customer data between crm and marketing platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_customer_data_between_crm_and_marketing_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to sync customer data between crm and marketing platform. The system should handle API calls automatically.", "workflow": {"workflowId": "d13d8c12-19fd-4ff0-95d2-1aa84e64eb78", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync customer data between CRM and marketing platform", "description": "HTTP workflow for sync customer data between crm and marketing platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_customer_data_between_crm_and_marketing_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to fetch weather data and update dashboard. The system should handle API calls automatically.", "workflow": {"workflowId": "ad76271f-38b1-4902-abfd-5ee021aca93b", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Fetch weather data and update dashboard", "description": "HTTP workflow for fetch weather data and update dashboard", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/fetch_weather_data_and_update_dashboard", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to fetch weather data and update dashboard. The system should handle API calls automatically.", "workflow": {"workflowId": "ad76271f-38b1-4902-abfd-5ee021aca93b", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Fetch weather data and update dashboard", "description": "HTTP workflow for fetch weather data and update dashboard", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/fetch_weather_data_and_update_dashboard", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to fetch weather data and update dashboard. The system should handle API calls automatically.", "workflow": {"workflowId": "ad76271f-38b1-4902-abfd-5ee021aca93b", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Fetch weather data and update dashboard", "description": "HTTP workflow for fetch weather data and update dashboard", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/fetch_weather_data_and_update_dashboard", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to submit form data to external analytics service. The system should handle API calls automatically.", "workflow": {"workflowId": "1e3d6411-0e4d-4174-94db-40c82463db5c", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Submit form data to external analytics service", "description": "HTTP workflow for submit form data to external analytics service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/submit_form_data_to_external_analytics_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to submit form data to external analytics service. The system should handle API calls automatically.", "workflow": {"workflowId": "1e3d6411-0e4d-4174-94db-40c82463db5c", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Submit form data to external analytics service", "description": "HTTP workflow for submit form data to external analytics service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/submit_form_data_to_external_analytics_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to submit form data to external analytics service. The system should handle API calls automatically.", "workflow": {"workflowId": "1e3d6411-0e4d-4174-94db-40c82463db5c", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Submit form data to external analytics service", "description": "HTTP workflow for submit form data to external analytics service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/submit_form_data_to_external_analytics_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to poll external api for order status updates. The system should handle API calls automatically.", "workflow": {"workflowId": "845ed6e2-514d-4f26-a6f5-ddc78c581bae", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Poll external API for order status updates", "description": "HTTP workflow for poll external api for order status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/poll_external_api_for_order_status_updates", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to poll external api for order status updates. The system should handle API calls automatically.", "workflow": {"workflowId": "845ed6e2-514d-4f26-a6f5-ddc78c581bae", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Poll external API for order status updates", "description": "HTTP workflow for poll external api for order status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/poll_external_api_for_order_status_updates", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to poll external api for order status updates. The system should handle API calls automatically.", "workflow": {"workflowId": "845ed6e2-514d-4f26-a6f5-ddc78c581bae", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Poll external API for order status updates", "description": "HTTP workflow for poll external api for order status updates", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/poll_external_api_for_order_status_updates", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to send webhook notifications to slack. The system should handle API calls automatically.", "workflow": {"workflowId": "cabcda13-8f2d-46e2-aa8d-c8352faca3ea", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send webhook notifications to Slack", "description": "HTTP workflow for send webhook notifications to slack", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_webhook_notifications_to_slack", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to send webhook notifications to slack. The system should handle API calls automatically.", "workflow": {"workflowId": "cabcda13-8f2d-46e2-aa8d-c8352faca3ea", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send webhook notifications to Slack", "description": "HTTP workflow for send webhook notifications to slack", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_webhook_notifications_to_slack", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to send webhook notifications to slack. The system should handle API calls automatically.", "workflow": {"workflowId": "cabcda13-8f2d-46e2-aa8d-c8352faca3ea", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send webhook notifications to Slack", "description": "HTTP workflow for send webhook notifications to slack", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_webhook_notifications_to_slack", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to update inventory levels in e-commerce platform. The system should handle API calls automatically.", "workflow": {"workflowId": "200722ac-a20e-4e57-9a64-01a52bdafb3f", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Update inventory levels in e-commerce platform", "description": "HTTP workflow for update inventory levels in e-commerce platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/update_inventory_levels_in_e-commerce_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to update inventory levels in e-commerce platform. The system should handle API calls automatically.", "workflow": {"workflowId": "200722ac-a20e-4e57-9a64-01a52bdafb3f", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Update inventory levels in e-commerce platform", "description": "HTTP workflow for update inventory levels in e-commerce platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/update_inventory_levels_in_e-commerce_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to update inventory levels in e-commerce platform. The system should handle API calls automatically.", "workflow": {"workflowId": "200722ac-a20e-4e57-9a64-01a52bdafb3f", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Update inventory levels in e-commerce platform", "description": "HTTP workflow for update inventory levels in e-commerce platform", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/update_inventory_levels_in_e-commerce_platform", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to backup data to cloud storage service. The system should handle API calls automatically.", "workflow": {"workflowId": "8b67d704-8e31-472b-855c-64a1bfc9ecc2", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Backup data to cloud storage service", "description": "HTTP workflow for backup data to cloud storage service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/backup_data_to_cloud_storage_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to backup data to cloud storage service. The system should handle API calls automatically.", "workflow": {"workflowId": "8b67d704-8e31-472b-855c-64a1bfc9ecc2", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Backup data to cloud storage service", "description": "HTTP workflow for backup data to cloud storage service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/backup_data_to_cloud_storage_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to backup data to cloud storage service. The system should handle API calls automatically.", "workflow": {"workflowId": "8b67d704-8e31-472b-855c-64a1bfc9ecc2", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Backup data to cloud storage service", "description": "HTTP workflow for backup data to cloud storage service", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "POST"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/backup_data_to_cloud_storage_service", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to trigger deployment pipeline via api. The system should handle API calls automatically.", "workflow": {"workflowId": "81611870-e664-40de-8e15-ab34e303c1a7", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Trigger deployment pipeline via API", "description": "HTTP workflow for trigger deployment pipeline via api", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/trigger_deployment_pipeline_via_api", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to trigger deployment pipeline via api. The system should handle API calls automatically.", "workflow": {"workflowId": "81611870-e664-40de-8e15-ab34e303c1a7", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Trigger deployment pipeline via API", "description": "HTTP workflow for trigger deployment pipeline via api", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/trigger_deployment_pipeline_via_api", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to trigger deployment pipeline via api. The system should handle API calls automatically.", "workflow": {"workflowId": "81611870-e664-40de-8e15-ab34e303c1a7", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Trigger deployment pipeline via API", "description": "HTTP workflow for trigger deployment pipeline via api", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "PUT"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/trigger_deployment_pipeline_via_api", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to send customer feedback to support system. The system should handle API calls automatically.", "workflow": {"workflowId": "76cba9b2-7c27-449d-bcf3-1fcb5ede9312", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send customer feedback to support system", "description": "HTTP workflow for send customer feedback to support system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_customer_feedback_to_support_system", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to send customer feedback to support system. The system should handle API calls automatically.", "workflow": {"workflowId": "76cba9b2-7c27-449d-bcf3-1fcb5ede9312", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send customer feedback to support system", "description": "HTTP workflow for send customer feedback to support system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_customer_feedback_to_support_system", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to send customer feedback to support system. The system should handle API calls automatically.", "workflow": {"workflowId": "76cba9b2-7c27-449d-bcf3-1fcb5ede9312", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Send customer feedback to support system", "description": "HTTP workflow for send customer feedback to support system", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/send_customer_feedback_to_support_system", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Set up an HTTP integration to sync calendar events with project management tool. The system should handle API calls automatically.", "workflow": {"workflowId": "e6c3185e-2423-444f-9345-7d4ef30bc16d", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync calendar events with project management tool", "description": "HTTP workflow for sync calendar events with project management tool", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_calendar_events_with_project_management_tool", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 2: Set up an HTTP integration to sync calendar events with project management tool. The system should handle API calls automatically.", "workflow": {"workflowId": "e6c3185e-2423-444f-9345-7d4ef30bc16d", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync calendar events with project management tool", "description": "HTTP workflow for sync calendar events with project management tool", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_calendar_events_with_project_management_tool", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 3: Set up an HTTP integration to sync calendar events with project management tool. The system should handle API calls automatically.", "workflow": {"workflowId": "e6c3185e-2423-444f-9345-7d4ef30bc16d", "name": "Variation 3: Variation 2: Variation 1: HTTP Integration: Sync calendar events with project management tool", "description": "HTTP workflow for sync calendar events with project management tool", "triggers": [{"node": "webhook", "parameters": {"path": "/api/trigger", "method": "GET"}}], "workflow": {"actions": [{"node": "httpRequest", "parameters": {"url": "https://api.example.com/sync_calendar_events_with_project_management_tool", "method": "GET", "headers": {"Content-Type": "application/json", "Authorization": "Bearer {{$env.API_TOKEN}}"}}}], "logic": [], "variables": []}}, "category": "http_integration_variation"}
{"prompt": "Variation 1: Create an SMS notification system to send appointment reminders to patients. Messages should be sent automatically.", "workflow": {"workflowId": "62299658-8335-4e49-acde-0be9f2c4078e", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Send appointment reminders to patients", "description": "SMS workflow for send appointment reminders to patients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Send appointment reminders to patients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to send appointment reminders to patients. Messages should be sent automatically.", "workflow": {"workflowId": "62299658-8335-4e49-acde-0be9f2c4078e", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Send appointment reminders to patients", "description": "SMS workflow for send appointment reminders to patients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Send appointment reminders to patients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to send appointment reminders to patients. Messages should be sent automatically.", "workflow": {"workflowId": "62299658-8335-4e49-acde-0be9f2c4078e", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Send appointment reminders to patients", "description": "SMS workflow for send appointment reminders to patients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Send appointment reminders to patients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to alert customers about order shipments. Messages should be sent automatically.", "workflow": {"workflowId": "a911a81e-ddbe-4628-b0ef-37541ab0ff74", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Alert customers about order shipments", "description": "SMS workflow for alert customers about order shipments", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Alert customers about order shipments"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to alert customers about order shipments. Messages should be sent automatically.", "workflow": {"workflowId": "a911a81e-ddbe-4628-b0ef-37541ab0ff74", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Alert customers about order shipments", "description": "SMS workflow for alert customers about order shipments", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Alert customers about order shipments"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to alert customers about order shipments. Messages should be sent automatically.", "workflow": {"workflowId": "a911a81e-ddbe-4628-b0ef-37541ab0ff74", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Alert customers about order shipments", "description": "SMS workflow for alert customers about order shipments", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Alert customers about order shipments"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to emergency notifications to on-call staff. Messages should be sent automatically.", "workflow": {"workflowId": "906dff8a-a3fb-4160-9d27-099357437ab4", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Emergency notifications to on-call staff", "description": "SMS workflow for emergency notifications to on-call staff", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Emergency notifications to on-call staff"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to emergency notifications to on-call staff. Messages should be sent automatically.", "workflow": {"workflowId": "906dff8a-a3fb-4160-9d27-099357437ab4", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Emergency notifications to on-call staff", "description": "SMS workflow for emergency notifications to on-call staff", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Emergency notifications to on-call staff"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to emergency notifications to on-call staff. Messages should be sent automatically.", "workflow": {"workflowId": "906dff8a-a3fb-4160-9d27-099357437ab4", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Emergency notifications to on-call staff", "description": "SMS workflow for emergency notifications to on-call staff", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Emergency notifications to on-call staff"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to daily sales summary to management. Messages should be sent automatically.", "workflow": {"workflowId": "ecdfd296-974e-4dc0-9020-02cbe7cd2e70", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Daily sales summary to management", "description": "SMS workflow for daily sales summary to management", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Daily sales summary to management"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to daily sales summary to management. Messages should be sent automatically.", "workflow": {"workflowId": "ecdfd296-974e-4dc0-9020-02cbe7cd2e70", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Daily sales summary to management", "description": "SMS workflow for daily sales summary to management", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Daily sales summary to management"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to daily sales summary to management. Messages should be sent automatically.", "workflow": {"workflowId": "ecdfd296-974e-4dc0-9020-02cbe7cd2e70", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Daily sales summary to management", "description": "SMS workflow for daily sales summary to management", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Daily sales summary to management"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to payment due reminders to clients. Messages should be sent automatically.", "workflow": {"workflowId": "8f6c266b-2a75-493d-8183-f8cae8b204ce", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Payment due reminders to clients", "description": "SMS workflow for payment due reminders to clients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Payment due reminders to clients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to payment due reminders to clients. Messages should be sent automatically.", "workflow": {"workflowId": "8f6c266b-2a75-493d-8183-f8cae8b204ce", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Payment due reminders to clients", "description": "SMS workflow for payment due reminders to clients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Payment due reminders to clients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to payment due reminders to clients. Messages should be sent automatically.", "workflow": {"workflowId": "8f6c266b-2a75-493d-8183-f8cae8b204ce", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Payment due reminders to clients", "description": "SMS workflow for payment due reminders to clients", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Payment due reminders to clients"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to event start notifications to attendees. Messages should be sent automatically.", "workflow": {"workflowId": "ea547447-6b4e-4363-8983-845f973f61c6", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Event start notifications to attendees", "description": "SMS workflow for event start notifications to attendees", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Event start notifications to attendees"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to event start notifications to attendees. Messages should be sent automatically.", "workflow": {"workflowId": "ea547447-6b4e-4363-8983-845f973f61c6", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Event start notifications to attendees", "description": "SMS workflow for event start notifications to attendees", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Event start notifications to attendees"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to event start notifications to attendees. Messages should be sent automatically.", "workflow": {"workflowId": "ea547447-6b4e-4363-8983-845f973f61c6", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Event start notifications to attendees", "description": "SMS workflow for event start notifications to attendees", "triggers": [{"node": "schedule", "parameters": {"interval": "daily", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Event start notifications to attendees"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to security alerts for suspicious activity. Messages should be sent automatically.", "workflow": {"workflowId": "9a773b1b-10a3-42f3-bb0b-16c629e2f54b", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Security alerts for suspicious activity", "description": "SMS workflow for security alerts for suspicious activity", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Security alerts for suspicious activity"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to security alerts for suspicious activity. Messages should be sent automatically.", "workflow": {"workflowId": "9a773b1b-10a3-42f3-bb0b-16c629e2f54b", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Security alerts for suspicious activity", "description": "SMS workflow for security alerts for suspicious activity", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Security alerts for suspicious activity"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to security alerts for suspicious activity. Messages should be sent automatically.", "workflow": {"workflowId": "9a773b1b-10a3-42f3-bb0b-16c629e2f54b", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Security alerts for suspicious activity", "description": "SMS workflow for security alerts for suspicious activity", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Security alerts for suspicious activity"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to delivery confirmation messages. Messages should be sent automatically.", "workflow": {"workflowId": "28d7d11e-ac8d-48b1-8923-714abc02c2c8", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Delivery confirmation messages", "description": "SMS workflow for delivery confirmation messages", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Delivery confirmation messages"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to delivery confirmation messages. Messages should be sent automatically.", "workflow": {"workflowId": "28d7d11e-ac8d-48b1-8923-714abc02c2c8", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Delivery confirmation messages", "description": "SMS workflow for delivery confirmation messages", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Delivery confirmation messages"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to delivery confirmation messages. Messages should be sent automatically.", "workflow": {"workflowId": "28d7d11e-ac8d-48b1-8923-714abc02c2c8", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Delivery confirmation messages", "description": "SMS workflow for delivery confirmation messages", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Delivery confirmation messages"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to promotional offers to loyal customers. Messages should be sent automatically.", "workflow": {"workflowId": "f0a4dc51-5595-477b-8c9c-445d0e54facf", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Promotional offers to loyal customers", "description": "SMS workflow for promotional offers to loyal customers", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Promotional offers to loyal customers"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to promotional offers to loyal customers. Messages should be sent automatically.", "workflow": {"workflowId": "f0a4dc51-5595-477b-8c9c-445d0e54facf", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Promotional offers to loyal customers", "description": "SMS workflow for promotional offers to loyal customers", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Promotional offers to loyal customers"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to promotional offers to loyal customers. Messages should be sent automatically.", "workflow": {"workflowId": "f0a4dc51-5595-477b-8c9c-445d0e54facf", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: Promotional offers to loyal customers", "description": "SMS workflow for promotional offers to loyal customers", "triggers": [{"node": "schedule", "parameters": {"interval": "immediate", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: Promotional offers to loyal customers"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Create an SMS notification system to system maintenance notifications. Messages should be sent automatically.", "workflow": {"workflowId": "1f8fbb08-3892-4407-af64-19979bae8cea", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: System maintenance notifications", "description": "SMS workflow for system maintenance notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: System maintenance notifications"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 2: Create an SMS notification system to system maintenance notifications. Messages should be sent automatically.", "workflow": {"workflowId": "1f8fbb08-3892-4407-af64-19979bae8cea", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: System maintenance notifications", "description": "SMS workflow for system maintenance notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: System maintenance notifications"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 3: Create an SMS notification system to system maintenance notifications. Messages should be sent automatically.", "workflow": {"workflowId": "1f8fbb08-3892-4407-af64-19979bae8cea", "name": "Variation 3: Variation 2: Variation 1: SMS Automation: System maintenance notifications", "description": "SMS workflow for system maintenance notifications", "triggers": [{"node": "schedule", "parameters": {"interval": "weekly", "time": "09:00"}}], "workflow": {"actions": [{"node": "twilioSMS", "parameters": {"to": "+1234567890", "message": "Automated SMS: System maintenance notifications"}}], "logic": [], "variables": []}}, "category": "sms_notification_variation"}
{"prompt": "Variation 1: Set up a database operation to archive old customer records monthly. The system should handle data processing automatically.", "workflow": {"workflowId": "ae0f0a2b-3297-40f8-a87d-c42f7d011b5a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Archive old customer records monthly", "description": "Database workflow for archive old customer records monthly", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_archive_old_customer_records_monthly", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to archive old customer records monthly. The system should handle data processing automatically.", "workflow": {"workflowId": "ae0f0a2b-3297-40f8-a87d-c42f7d011b5a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Archive old customer records monthly", "description": "Database workflow for archive old customer records monthly", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_archive_old_customer_records_monthly", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to archive old customer records monthly. The system should handle data processing automatically.", "workflow": {"workflowId": "ae0f0a2b-3297-40f8-a87d-c42f7d011b5a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Archive old customer records monthly", "description": "Database workflow for archive old customer records monthly", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_archive_old_customer_records_monthly", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to generate daily sales reports from transaction data. The system should handle data processing automatically.", "workflow": {"workflowId": "dcf0c17d-c007-4f90-a562-8803f7be6d64", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate daily sales reports from transaction data", "description": "Database workflow for generate daily sales reports from transaction data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_daily_sales_reports_from_transaction_data", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to generate daily sales reports from transaction data. The system should handle data processing automatically.", "workflow": {"workflowId": "dcf0c17d-c007-4f90-a562-8803f7be6d64", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate daily sales reports from transaction data", "description": "Database workflow for generate daily sales reports from transaction data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_daily_sales_reports_from_transaction_data", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to generate daily sales reports from transaction data. The system should handle data processing automatically.", "workflow": {"workflowId": "dcf0c17d-c007-4f90-a562-8803f7be6d64", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate daily sales reports from transaction data", "description": "Database workflow for generate daily sales reports from transaction data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_daily_sales_reports_from_transaction_data", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to update user profiles with latest activity. The system should handle data processing automatically.", "workflow": {"workflowId": "8c6ee9d2-76af-4466-b784-c850861d3c0a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update user profiles with latest activity", "description": "Database workflow for update user profiles with latest activity", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_user_profiles_with_latest_activity", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to update user profiles with latest activity. The system should handle data processing automatically.", "workflow": {"workflowId": "8c6ee9d2-76af-4466-b784-c850861d3c0a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update user profiles with latest activity", "description": "Database workflow for update user profiles with latest activity", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_user_profiles_with_latest_activity", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to update user profiles with latest activity. The system should handle data processing automatically.", "workflow": {"workflowId": "8c6ee9d2-76af-4466-b784-c850861d3c0a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update user profiles with latest activity", "description": "Database workflow for update user profiles with latest activity", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_user_profiles_with_latest_activity", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to clean up expired session tokens. The system should handle data processing automatically.", "workflow": {"workflowId": "3bb041d8-eba5-45c4-9ae8-dc425f2b6054", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Clean up expired session tokens", "description": "Database workflow for clean up expired session tokens", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_clean_up_expired_session_tokens", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to clean up expired session tokens. The system should handle data processing automatically.", "workflow": {"workflowId": "3bb041d8-eba5-45c4-9ae8-dc425f2b6054", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Clean up expired session tokens", "description": "Database workflow for clean up expired session tokens", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_clean_up_expired_session_tokens", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to clean up expired session tokens. The system should handle data processing automatically.", "workflow": {"workflowId": "3bb041d8-eba5-45c4-9ae8-dc425f2b6054", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Clean up expired session tokens", "description": "Database workflow for clean up expired session tokens", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_clean_up_expired_session_tokens", "database": "main_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to backup critical business data. The system should handle data processing automatically.", "workflow": {"workflowId": "29948a5e-16f7-4579-9a60-1b71b18c466a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Backup critical business data", "description": "Database workflow for backup critical business data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_backup_critical_business_data", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to backup critical business data. The system should handle data processing automatically.", "workflow": {"workflowId": "29948a5e-16f7-4579-9a60-1b71b18c466a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Backup critical business data", "description": "Database workflow for backup critical business data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_backup_critical_business_data", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to backup critical business data. The system should handle data processing automatically.", "workflow": {"workflowId": "29948a5e-16f7-4579-9a60-1b71b18c466a", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Backup critical business data", "description": "Database workflow for backup critical business data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_backup_critical_business_data", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to sync user preferences across systems. The system should handle data processing automatically.", "workflow": {"workflowId": "d0b753e9-a6e4-4796-86b6-eabc49ff1a1d", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Sync user preferences across systems", "description": "Database workflow for sync user preferences across systems", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_sync_user_preferences_across_systems", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to sync user preferences across systems. The system should handle data processing automatically.", "workflow": {"workflowId": "d0b753e9-a6e4-4796-86b6-eabc49ff1a1d", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Sync user preferences across systems", "description": "Database workflow for sync user preferences across systems", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_sync_user_preferences_across_systems", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to sync user preferences across systems. The system should handle data processing automatically.", "workflow": {"workflowId": "d0b753e9-a6e4-4796-86b6-eabc49ff1a1d", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Sync user preferences across systems", "description": "Database workflow for sync user preferences across systems", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_sync_user_preferences_across_systems", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to calculate monthly subscription renewals. The system should handle data processing automatically.", "workflow": {"workflowId": "9b9f70f4-f717-4a8e-9f71-0c42b2585e67", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Calculate monthly subscription renewals", "description": "Database workflow for calculate monthly subscription renewals", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_calculate_monthly_subscription_renewals", "database": "inventory_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to calculate monthly subscription renewals. The system should handle data processing automatically.", "workflow": {"workflowId": "9b9f70f4-f717-4a8e-9f71-0c42b2585e67", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Calculate monthly subscription renewals", "description": "Database workflow for calculate monthly subscription renewals", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_calculate_monthly_subscription_renewals", "database": "inventory_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to calculate monthly subscription renewals. The system should handle data processing automatically.", "workflow": {"workflowId": "9b9f70f4-f717-4a8e-9f71-0c42b2585e67", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Calculate monthly subscription renewals", "description": "Database workflow for calculate monthly subscription renewals", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_calculate_monthly_subscription_renewals", "database": "inventory_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to update inventory counts from warehouse data. The system should handle data processing automatically.", "workflow": {"workflowId": "3d3b6c7a-6ac2-44c4-8b67-4b124676ae37", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update inventory counts from warehouse data", "description": "Database workflow for update inventory counts from warehouse data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_inventory_counts_from_warehouse_data", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to update inventory counts from warehouse data. The system should handle data processing automatically.", "workflow": {"workflowId": "3d3b6c7a-6ac2-44c4-8b67-4b124676ae37", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update inventory counts from warehouse data", "description": "Database workflow for update inventory counts from warehouse data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_inventory_counts_from_warehouse_data", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to update inventory counts from warehouse data. The system should handle data processing automatically.", "workflow": {"workflowId": "3d3b6c7a-6ac2-44c4-8b67-4b124676ae37", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Update inventory counts from warehouse data", "description": "Database workflow for update inventory counts from warehouse data", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_update_inventory_counts_from_warehouse_data", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to generate customer analytics dashboards. The system should handle data processing automatically.", "workflow": {"workflowId": "5487119e-655c-453f-b86b-cde51560f7be", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate customer analytics dashboards", "description": "Database workflow for generate customer analytics dashboards", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_customer_analytics_dashboards", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to generate customer analytics dashboards. The system should handle data processing automatically.", "workflow": {"workflowId": "5487119e-655c-453f-b86b-cde51560f7be", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate customer analytics dashboards", "description": "Database workflow for generate customer analytics dashboards", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_customer_analytics_dashboards", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to generate customer analytics dashboards. The system should handle data processing automatically.", "workflow": {"workflowId": "5487119e-655c-453f-b86b-cde51560f7be", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Generate customer analytics dashboards", "description": "Database workflow for generate customer analytics dashboards", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_generate_customer_analytics_dashboards", "database": "analytics_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Set up a database operation to audit user access logs for compliance. The system should handle data processing automatically.", "workflow": {"workflowId": "a7b87371-e580-4b44-abf5-f0ccb4c81c14", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Audit user access logs for compliance", "description": "Database workflow for audit user access logs for compliance", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_audit_user_access_logs_for_compliance", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 2: Set up a database operation to audit user access logs for compliance. The system should handle data processing automatically.", "workflow": {"workflowId": "a7b87371-e580-4b44-abf5-f0ccb4c81c14", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Audit user access logs for compliance", "description": "Database workflow for audit user access logs for compliance", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_audit_user_access_logs_for_compliance", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 3: Set up a database operation to audit user access logs for compliance. The system should handle data processing automatically.", "workflow": {"workflowId": "a7b87371-e580-4b44-abf5-f0ccb4c81c14", "name": "Variation 3: Variation 2: Variation 1: Database Operation: Audit user access logs for compliance", "description": "Database workflow for audit user access logs for compliance", "triggers": [{"node": "manual", "parameters": {}}], "workflow": {"actions": [{"node": "postgresQuery", "parameters": {"query": "SELECT * FROM relevant_table WHERE condition_for_audit_user_access_logs_for_compliance", "database": "user_db"}}], "logic": [], "variables": []}}, "category": "database_operation_variation"}
{"prompt": "Variation 1: Create an AI system to analyze customer feedback sentiment. The AI should process content automatically.", "workflow": {"workflowId": "d369b6c9-176e-457c-a9ca-f18edf49562f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze customer feedback sentiment", "description": "AI workflow for analyze customer feedback sentiment", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_customer_feedback_sentiment", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-3.5-turbo", "prompt": "Please analyze customer feedback sentiment based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to analyze customer feedback sentiment. The AI should process content automatically.", "workflow": {"workflowId": "d369b6c9-176e-457c-a9ca-f18edf49562f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze customer feedback sentiment", "description": "AI workflow for analyze customer feedback sentiment", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_customer_feedback_sentiment", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-3.5-turbo", "prompt": "Please analyze customer feedback sentiment based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to analyze customer feedback sentiment. The AI should process content automatically.", "workflow": {"workflowId": "d369b6c9-176e-457c-a9ca-f18edf49562f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze customer feedback sentiment", "description": "AI workflow for analyze customer feedback sentiment", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_customer_feedback_sentiment", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gpt-3.5-turbo", "prompt": "Please analyze customer feedback sentiment based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to generate product descriptions from images. The AI should process content automatically.", "workflow": {"workflowId": "88ea5b61-85d5-443f-850f-fb6d0383f6ba", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate product descriptions from images", "description": "AI workflow for generate product descriptions from images", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_product_descriptions_from_images", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please generate product descriptions from images based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to generate product descriptions from images. The AI should process content automatically.", "workflow": {"workflowId": "88ea5b61-85d5-443f-850f-fb6d0383f6ba", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate product descriptions from images", "description": "AI workflow for generate product descriptions from images", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_product_descriptions_from_images", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please generate product descriptions from images based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to generate product descriptions from images. The AI should process content automatically.", "workflow": {"workflowId": "88ea5b61-85d5-443f-850f-fb6d0383f6ba", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate product descriptions from images", "description": "AI workflow for generate product descriptions from images", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_product_descriptions_from_images", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please generate product descriptions from images based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to classify support tickets by urgency. The AI should process content automatically.", "workflow": {"workflowId": "f563927d-9a6e-4c7b-b7c3-90f019a56f50", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Classify support tickets by urgency", "description": "AI workflow for classify support tickets by urgency", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/classify_support_tickets_by_urgency", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please classify support tickets by urgency based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to classify support tickets by urgency. The AI should process content automatically.", "workflow": {"workflowId": "f563927d-9a6e-4c7b-b7c3-90f019a56f50", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Classify support tickets by urgency", "description": "AI workflow for classify support tickets by urgency", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/classify_support_tickets_by_urgency", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please classify support tickets by urgency based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to classify support tickets by urgency. The AI should process content automatically.", "workflow": {"workflowId": "f563927d-9a6e-4c7b-b7c3-90f019a56f50", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Classify support tickets by urgency", "description": "AI workflow for classify support tickets by urgency", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/classify_support_tickets_by_urgency", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please classify support tickets by urgency based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to summarize meeting transcripts. The AI should process content automatically.", "workflow": {"workflowId": "977b43a7-b807-4d9b-bf3d-9369549572d9", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Summarize meeting transcripts", "description": "AI workflow for summarize meeting transcripts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/summarize_meeting_transcripts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please summarize meeting transcripts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to summarize meeting transcripts. The AI should process content automatically.", "workflow": {"workflowId": "977b43a7-b807-4d9b-bf3d-9369549572d9", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Summarize meeting transcripts", "description": "AI workflow for summarize meeting transcripts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/summarize_meeting_transcripts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please summarize meeting transcripts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to summarize meeting transcripts. The AI should process content automatically.", "workflow": {"workflowId": "977b43a7-b807-4d9b-bf3d-9369549572d9", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Summarize meeting transcripts", "description": "AI workflow for summarize meeting transcripts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/summarize_meeting_transcripts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please summarize meeting transcripts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to extract key information from contracts. The AI should process content automatically.", "workflow": {"workflowId": "d09e787c-ff32-4913-bc2c-2de39aa4cc8f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Extract key information from contracts", "description": "AI workflow for extract key information from contracts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/extract_key_information_from_contracts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please extract key information from contracts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to extract key information from contracts. The AI should process content automatically.", "workflow": {"workflowId": "d09e787c-ff32-4913-bc2c-2de39aa4cc8f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Extract key information from contracts", "description": "AI workflow for extract key information from contracts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/extract_key_information_from_contracts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please extract key information from contracts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to extract key information from contracts. The AI should process content automatically.", "workflow": {"workflowId": "d09e787c-ff32-4913-bc2c-2de39aa4cc8f", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Extract key information from contracts", "description": "AI workflow for extract key information from contracts", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/extract_key_information_from_contracts", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please extract key information from contracts based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to generate personalized email content. The AI should process content automatically.", "workflow": {"workflowId": "16b567ee-ae90-48dd-ba07-029a4feb2c69", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate personalized email content", "description": "AI workflow for generate personalized email content", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_personalized_email_content", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate personalized email content based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to generate personalized email content. The AI should process content automatically.", "workflow": {"workflowId": "16b567ee-ae90-48dd-ba07-029a4feb2c69", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate personalized email content", "description": "AI workflow for generate personalized email content", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_personalized_email_content", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate personalized email content based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to generate personalized email content. The AI should process content automatically.", "workflow": {"workflowId": "16b567ee-ae90-48dd-ba07-029a4feb2c69", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate personalized email content", "description": "AI workflow for generate personalized email content", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_personalized_email_content", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate personalized email content based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to analyze social media mentions. The AI should process content automatically.", "workflow": {"workflowId": "7829163a-e776-4f11-8310-e1ffdbea7feb", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze social media mentions", "description": "AI workflow for analyze social media mentions", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_social_media_mentions", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please analyze social media mentions based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to analyze social media mentions. The AI should process content automatically.", "workflow": {"workflowId": "7829163a-e776-4f11-8310-e1ffdbea7feb", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze social media mentions", "description": "AI workflow for analyze social media mentions", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_social_media_mentions", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please analyze social media mentions based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to analyze social media mentions. The AI should process content automatically.", "workflow": {"workflowId": "7829163a-e776-4f11-8310-e1ffdbea7feb", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Analyze social media mentions", "description": "AI workflow for analyze social media mentions", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/analyze_social_media_mentions", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please analyze social media mentions based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to create content recommendations. The AI should process content automatically.", "workflow": {"workflowId": "f93e97fd-b572-423c-a6c3-2edaa22dd5aa", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Create content recommendations", "description": "AI workflow for create content recommendations", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/create_content_recommendations", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please create content recommendations based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to create content recommendations. The AI should process content automatically.", "workflow": {"workflowId": "f93e97fd-b572-423c-a6c3-2edaa22dd5aa", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Create content recommendations", "description": "AI workflow for create content recommendations", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/create_content_recommendations", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please create content recommendations based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to create content recommendations. The AI should process content automatically.", "workflow": {"workflowId": "f93e97fd-b572-423c-a6c3-2edaa22dd5aa", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Create content recommendations", "description": "AI workflow for create content recommendations", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/create_content_recommendations", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "claude-3", "prompt": "Please create content recommendations based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to process resume screening. The AI should process content automatically.", "workflow": {"workflowId": "d79ff547-a553-4ccb-a1c9-b37395417a34", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Process resume screening", "description": "AI workflow for process resume screening", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/process_resume_screening", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please process resume screening based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to process resume screening. The AI should process content automatically.", "workflow": {"workflowId": "d79ff547-a553-4ccb-a1c9-b37395417a34", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Process resume screening", "description": "AI workflow for process resume screening", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/process_resume_screening", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please process resume screening based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to process resume screening. The AI should process content automatically.", "workflow": {"workflowId": "d79ff547-a553-4ccb-a1c9-b37395417a34", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Process resume screening", "description": "AI workflow for process resume screening", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/process_resume_screening", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please process resume screening based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 1: Create an AI system to generate automated responses to faqs. The AI should process content automatically.", "workflow": {"workflowId": "9c5f8adf-aecd-4146-8cdf-137e4ce67e61", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate automated responses to FAQs", "description": "AI workflow for generate automated responses to faqs", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_automated_responses_to_faqs", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate automated responses to faqs based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 2: Create an AI system to generate automated responses to faqs. The AI should process content automatically.", "workflow": {"workflowId": "9c5f8adf-aecd-4146-8cdf-137e4ce67e61", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate automated responses to FAQs", "description": "AI workflow for generate automated responses to faqs", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_automated_responses_to_faqs", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate automated responses to faqs based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
{"prompt": "Variation 3: Create an AI system to generate automated responses to faqs. The AI should process content automatically.", "workflow": {"workflowId": "9c5f8adf-aecd-4146-8cdf-137e4ce67e61", "name": "Variation 3: Variation 2: Variation 1: AI Processing: Generate automated responses to FAQs", "description": "AI workflow for generate automated responses to faqs", "triggers": [{"node": "fileWatch", "parameters": {"path": "/inputs/generate_automated_responses_to_faqs", "pattern": "*.txt"}}], "workflow": {"actions": [{"node": "openAI", "parameters": {"model": "gemini-pro", "prompt": "Please generate automated responses to faqs based on the provided input", "input": "{{$json.file_content}}"}}], "logic": [], "variables": []}}, "category": "ai_processing_variation"}
